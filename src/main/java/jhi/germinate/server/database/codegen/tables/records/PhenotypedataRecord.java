/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.tables.Phenotypedata;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * Contains phenotypic data which has been collected.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhenotypedataRecord extends UpdatableRecordImpl<PhenotypedataRecord> implements Record7<Integer, Integer, Integer, String, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.phenotypedata.id</code>. Primary id for
     * this table. This uniquely identifies the row.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.id</code>. Primary id for
     * this table. This uniquely identifies the row.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.trialsetup_id</code>.
     */
    public void setTrialsetupId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.trialsetup_id</code>.
     */
    public Integer getTrialsetupId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.phenotype_id</code>. Foreign
     * key phenotypes (phenotype.id).
     */
    public void setPhenotypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.phenotype_id</code>. Foreign
     * key phenotypes (phenotype.id).
     */
    public Integer getPhenotypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.phenotype_value</code>. The
     * phenotype value for this phenotype_id and germinatebase_id combination.
     */
    public void setPhenotypeValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.phenotype_value</code>. The
     * phenotype value for this phenotype_id and germinatebase_id combination.
     */
    public String getPhenotypeValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.recording_date</code>. Date
     * when the phenotypic result was recorded. Should be formatted 'YYYY-MM-DD
     * HH:MM:SS' or just 'YYYY-MM-DD' where a timestamp is not available.
     */
    public void setRecordingDate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.recording_date</code>. Date
     * when the phenotypic result was recorded. Should be formatted 'YYYY-MM-DD
     * HH:MM:SS' or just 'YYYY-MM-DD' where a timestamp is not available.
     */
    public Timestamp getRecordingDate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.created_on</code>. When the
     * record was created.
     */
    public void setCreatedOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.created_on</code>. When the
     * record was created.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.updated_on</code>. When the
     * record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.updated_on</code>. When the
     * record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, String, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, String, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Phenotypedata.PHENOTYPEDATA.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Phenotypedata.PHENOTYPEDATA.TRIALSETUP_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Phenotypedata.PHENOTYPEDATA.PHENOTYPE_ID;
    }

    @Override
    public Field<String> field4() {
        return Phenotypedata.PHENOTYPEDATA.PHENOTYPE_VALUE;
    }

    @Override
    public Field<Timestamp> field5() {
        return Phenotypedata.PHENOTYPEDATA.RECORDING_DATE;
    }

    @Override
    public Field<Timestamp> field6() {
        return Phenotypedata.PHENOTYPEDATA.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field7() {
        return Phenotypedata.PHENOTYPEDATA.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getTrialsetupId();
    }

    @Override
    public Integer component3() {
        return getPhenotypeId();
    }

    @Override
    public String component4() {
        return getPhenotypeValue();
    }

    @Override
    public Timestamp component5() {
        return getRecordingDate();
    }

    @Override
    public Timestamp component6() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component7() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getTrialsetupId();
    }

    @Override
    public Integer value3() {
        return getPhenotypeId();
    }

    @Override
    public String value4() {
        return getPhenotypeValue();
    }

    @Override
    public Timestamp value5() {
        return getRecordingDate();
    }

    @Override
    public Timestamp value6() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value7() {
        return getUpdatedOn();
    }

    @Override
    public PhenotypedataRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PhenotypedataRecord value2(Integer value) {
        setTrialsetupId(value);
        return this;
    }

    @Override
    public PhenotypedataRecord value3(Integer value) {
        setPhenotypeId(value);
        return this;
    }

    @Override
    public PhenotypedataRecord value4(String value) {
        setPhenotypeValue(value);
        return this;
    }

    @Override
    public PhenotypedataRecord value5(Timestamp value) {
        setRecordingDate(value);
        return this;
    }

    @Override
    public PhenotypedataRecord value6(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public PhenotypedataRecord value7(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public PhenotypedataRecord values(Integer value1, Integer value2, Integer value3, String value4, Timestamp value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PhenotypedataRecord
     */
    public PhenotypedataRecord() {
        super(Phenotypedata.PHENOTYPEDATA);
    }

    /**
     * Create a detached, initialised PhenotypedataRecord
     */
    public PhenotypedataRecord(Integer id, Integer trialsetupId, Integer phenotypeId, String phenotypeValue, Timestamp recordingDate, Timestamp createdOn, Timestamp updatedOn) {
        super(Phenotypedata.PHENOTYPEDATA);

        setId(id);
        setTrialsetupId(trialsetupId);
        setPhenotypeId(phenotypeId);
        setPhenotypeValue(phenotypeValue);
        setRecordingDate(recordingDate);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised PhenotypedataRecord
     */
    public PhenotypedataRecord(jhi.germinate.server.database.codegen.tables.pojos.Phenotypedata value) {
        super(Phenotypedata.PHENOTYPEDATA);

        if (value != null) {
            setId(value.getId());
            setTrialsetupId(value.getTrialsetupId());
            setPhenotypeId(value.getPhenotypeId());
            setPhenotypeValue(value.getPhenotypeValue());
            setRecordingDate(value.getRecordingDate());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
