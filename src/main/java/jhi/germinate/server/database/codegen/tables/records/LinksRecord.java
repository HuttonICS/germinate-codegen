/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.tables.Links;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * Germinate allows to define external links for different types of data. With
 * this feature you can
 * define links to external resources.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record8<Integer, Integer, Integer, String, String, Boolean, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.links.id</code>. Primary id for this table.
     * This uniquely identifies the row.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.links.id</code>. Primary id for this table.
     * This uniquely identifies the row.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.links.linktype_id</code>. Foreign key to
     * linktypes (linktypes.id).
     */
    public void setLinktypeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.links.linktype_id</code>. Foreign key to
     * linktypes (linktypes.id).
     */
    public Integer getLinktypeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>germinate_db.links.foreign_id</code>.
     */
    public void setForeignId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.links.foreign_id</code>.
     */
    public Integer getForeignId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>germinate_db.links.hyperlink</code>. The actual
     * hyperlink.
     */
    public void setHyperlink(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_db.links.hyperlink</code>. The actual
     * hyperlink.
     */
    public String getHyperlink() {
        return (String) get(3);
    }

    /**
     * Setter for <code>germinate_db.links.description</code>. A description of
     * the link.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>germinate_db.links.description</code>. A description of
     * the link.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>germinate_db.links.visibility</code>. Determines if the
     * link is visible or not: {0, 1}
     */
    public void setVisibility(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_db.links.visibility</code>. Determines if the
     * link is visible or not: {0, 1}
     */
    public Boolean getVisibility() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>germinate_db.links.created_on</code>. When the record
     * was created.
     */
    public void setCreatedOn(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>germinate_db.links.created_on</code>. When the record
     * was created.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>germinate_db.links.updated_on</code>. When the record
     * was updated. This may be different from the created on date if subsequent
     * changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>germinate_db.links.updated_on</code>. When the record
     * was updated. This may be different from the created on date if subsequent
     * changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, String, String, Boolean, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, Integer, String, String, Boolean, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Links.LINKS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Links.LINKS.LINKTYPE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Links.LINKS.FOREIGN_ID;
    }

    @Override
    public Field<String> field4() {
        return Links.LINKS.HYPERLINK;
    }

    @Override
    public Field<String> field5() {
        return Links.LINKS.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field6() {
        return Links.LINKS.VISIBILITY;
    }

    @Override
    public Field<Timestamp> field7() {
        return Links.LINKS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field8() {
        return Links.LINKS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getLinktypeId();
    }

    @Override
    public Integer component3() {
        return getForeignId();
    }

    @Override
    public String component4() {
        return getHyperlink();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Boolean component6() {
        return getVisibility();
    }

    @Override
    public Timestamp component7() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component8() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getLinktypeId();
    }

    @Override
    public Integer value3() {
        return getForeignId();
    }

    @Override
    public String value4() {
        return getHyperlink();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Boolean value6() {
        return getVisibility();
    }

    @Override
    public Timestamp value7() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value8() {
        return getUpdatedOn();
    }

    @Override
    public LinksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public LinksRecord value2(Integer value) {
        setLinktypeId(value);
        return this;
    }

    @Override
    public LinksRecord value3(Integer value) {
        setForeignId(value);
        return this;
    }

    @Override
    public LinksRecord value4(String value) {
        setHyperlink(value);
        return this;
    }

    @Override
    public LinksRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public LinksRecord value6(Boolean value) {
        setVisibility(value);
        return this;
    }

    @Override
    public LinksRecord value7(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public LinksRecord value8(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public LinksRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Boolean value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(Integer id, Integer linktypeId, Integer foreignId, String hyperlink, String description, Boolean visibility, Timestamp createdOn, Timestamp updatedOn) {
        super(Links.LINKS);

        setId(id);
        setLinktypeId(linktypeId);
        setForeignId(foreignId);
        setHyperlink(hyperlink);
        setDescription(description);
        setVisibility(visibility);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(jhi.germinate.server.database.codegen.tables.pojos.Links value) {
        super(Links.LINKS);

        if (value != null) {
            setId(value.getId());
            setLinktypeId(value.getLinktypeId());
            setForeignId(value.getForeignId());
            setHyperlink(value.getHyperlink());
            setDescription(value.getDescription());
            setVisibility(value.getVisibility());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
