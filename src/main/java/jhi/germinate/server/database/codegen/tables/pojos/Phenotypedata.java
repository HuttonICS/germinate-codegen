/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;


// @formatter:off
/**
 * Contains phenotypic data which has been collected.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Phenotypedata implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer    id;
    private Integer    phenotypeId;
    private Integer    germinatebaseId;
    private String     rep;
    private String     block;
    private BigDecimal latitude;
    private BigDecimal longitude;
    private BigDecimal elevation;
    private String     phenotypeValue;
    private Integer    datasetId;
    private Timestamp  recordingDate;
    private Timestamp  createdOn;
    private Timestamp  updatedOn;
    private Integer    locationId;
    private Integer    treatmentId;
    private Integer    trialseriesId;

    public Phenotypedata() {}

    public Phenotypedata(Phenotypedata value) {
        this.id = value.id;
        this.phenotypeId = value.phenotypeId;
        this.germinatebaseId = value.germinatebaseId;
        this.rep = value.rep;
        this.block = value.block;
        this.latitude = value.latitude;
        this.longitude = value.longitude;
        this.elevation = value.elevation;
        this.phenotypeValue = value.phenotypeValue;
        this.datasetId = value.datasetId;
        this.recordingDate = value.recordingDate;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
        this.locationId = value.locationId;
        this.treatmentId = value.treatmentId;
        this.trialseriesId = value.trialseriesId;
    }

    public Phenotypedata(
        Integer    id,
        Integer    phenotypeId,
        Integer    germinatebaseId,
        String     rep,
        String     block,
        BigDecimal latitude,
        BigDecimal longitude,
        BigDecimal elevation,
        String     phenotypeValue,
        Integer    datasetId,
        Timestamp  recordingDate,
        Timestamp  createdOn,
        Timestamp  updatedOn,
        Integer    locationId,
        Integer    treatmentId,
        Integer    trialseriesId
    ) {
        this.id = id;
        this.phenotypeId = phenotypeId;
        this.germinatebaseId = germinatebaseId;
        this.rep = rep;
        this.block = block;
        this.latitude = latitude;
        this.longitude = longitude;
        this.elevation = elevation;
        this.phenotypeValue = phenotypeValue;
        this.datasetId = datasetId;
        this.recordingDate = recordingDate;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
        this.locationId = locationId;
        this.treatmentId = treatmentId;
        this.trialseriesId = trialseriesId;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.id</code>. Primary id for
     * this table. This uniquely identifies the row.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.id</code>. Primary id for
     * this table. This uniquely identifies the row.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.phenotype_id</code>. Foreign
     * key phenotypes (phenotype.id).
     */
    public Integer getPhenotypeId() {
        return this.phenotypeId;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.phenotype_id</code>. Foreign
     * key phenotypes (phenotype.id).
     */
    public void setPhenotypeId(Integer phenotypeId) {
        this.phenotypeId = phenotypeId;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.germinatebase_id</code>.
     * Foreign key germinatebase (germinatebase.id).
     */
    public Integer getGerminatebaseId() {
        return this.germinatebaseId;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.germinatebase_id</code>.
     * Foreign key germinatebase (germinatebase.id).
     */
    public void setGerminatebaseId(Integer germinatebaseId) {
        this.germinatebaseId = germinatebaseId;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.rep</code>.
     */
    public String getRep() {
        return this.rep;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.rep</code>.
     */
    public void setRep(String rep) {
        this.rep = rep;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.block</code>.
     */
    public String getBlock() {
        return this.block;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.block</code>.
     */
    public void setBlock(String block) {
        this.block = block;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.latitude</code>.
     */
    public BigDecimal getLatitude() {
        return this.latitude;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.latitude</code>.
     */
    public void setLatitude(BigDecimal latitude) {
        this.latitude = latitude;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.longitude</code>.
     */
    public BigDecimal getLongitude() {
        return this.longitude;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.longitude</code>.
     */
    public void setLongitude(BigDecimal longitude) {
        this.longitude = longitude;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.elevation</code>.
     */
    public BigDecimal getElevation() {
        return this.elevation;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.elevation</code>.
     */
    public void setElevation(BigDecimal elevation) {
        this.elevation = elevation;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.phenotype_value</code>. The
     * phenotype value for this phenotype_id and germinatebase_id combination.
     */
    public String getPhenotypeValue() {
        return this.phenotypeValue;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.phenotype_value</code>. The
     * phenotype value for this phenotype_id and germinatebase_id combination.
     */
    public void setPhenotypeValue(String phenotypeValue) {
        this.phenotypeValue = phenotypeValue;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.dataset_id</code>. Foreign
     * key datasets (datasets.id).
     */
    public Integer getDatasetId() {
        return this.datasetId;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.dataset_id</code>. Foreign
     * key datasets (datasets.id).
     */
    public void setDatasetId(Integer datasetId) {
        this.datasetId = datasetId;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.recording_date</code>. Date
     * when the phenotypic result was recorded. Should be formatted 'YYYY-MM-DD
     * HH:MM:SS' or just 'YYYY-MM-DD' where a timestamp is not available.
     */
    public Timestamp getRecordingDate() {
        return this.recordingDate;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.recording_date</code>. Date
     * when the phenotypic result was recorded. Should be formatted 'YYYY-MM-DD
     * HH:MM:SS' or just 'YYYY-MM-DD' where a timestamp is not available.
     */
    public void setRecordingDate(Timestamp recordingDate) {
        this.recordingDate = recordingDate;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.created_on</code>. When the
     * record was created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.created_on</code>. When the
     * record was created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.updated_on</code>. When the
     * record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.updated_on</code>. When the
     * record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.location_id</code>. Foreign
     * key to locations (locations.id).
     */
    public Integer getLocationId() {
        return this.locationId;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.location_id</code>. Foreign
     * key to locations (locations.id).
     */
    public void setLocationId(Integer locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.treatment_id</code>. Foreign
     * key to treatments (treatments.id).
     */
    public Integer getTreatmentId() {
        return this.treatmentId;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.treatment_id</code>. Foreign
     * key to treatments (treatments.id).
     */
    public void setTreatmentId(Integer treatmentId) {
        this.treatmentId = treatmentId;
    }

    /**
     * Getter for <code>germinate_db.phenotypedata.trialseries_id</code>.
     * Foreign key to trialseries (trialseries.id).
     */
    public Integer getTrialseriesId() {
        return this.trialseriesId;
    }

    /**
     * Setter for <code>germinate_db.phenotypedata.trialseries_id</code>.
     * Foreign key to trialseries (trialseries.id).
     */
    public void setTrialseriesId(Integer trialseriesId) {
        this.trialseriesId = trialseriesId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Phenotypedata (");

        sb.append(id);
        sb.append(", ").append(phenotypeId);
        sb.append(", ").append(germinatebaseId);
        sb.append(", ").append(rep);
        sb.append(", ").append(block);
        sb.append(", ").append(latitude);
        sb.append(", ").append(longitude);
        sb.append(", ").append(elevation);
        sb.append(", ").append(phenotypeValue);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(recordingDate);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);
        sb.append(", ").append(locationId);
        sb.append(", ").append(treatmentId);
        sb.append(", ").append(trialseriesId);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
