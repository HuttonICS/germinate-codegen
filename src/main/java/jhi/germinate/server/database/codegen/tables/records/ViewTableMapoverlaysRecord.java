/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.enums.ViewTableMapoverlaysReferenceTable;
import jhi.germinate.server.database.codegen.tables.ViewTableMapoverlays;

import org.jooq.Field;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableMapoverlaysRecord extends TableRecordImpl<ViewTableMapoverlaysRecord> implements Record17<Integer, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Boolean, ViewTableMapoverlaysReferenceTable, Integer, Integer, String, String, String, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_id</code>. The
     * primary key of this table.
     */
    public void setMapoverlayId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_id</code>. The
     * primary key of this table.
     */
    public Integer getMapoverlayId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_name</code>. A name
     * for the map overlay.
     */
    public void setMapoverlayName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_name</code>. A name
     * for the map overlay.
     */
    public String getMapoverlayName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_description</code>.
     * An optional description of what is shown on the overlay.
     */
    public void setMapoverlayDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_description</code>.
     * An optional description of what is shown on the overlay.
     */
    public String getMapoverlayDescription() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lat</code>.
     * The bottom left latitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public void setMapoverlayBottomLeftLat(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lat</code>.
     * The bottom left latitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public BigDecimal getMapoverlayBottomLeftLat() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lng</code>.
     * The bottom left longitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public void setMapoverlayBottomLeftLng(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lng</code>.
     * The bottom left longitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public BigDecimal getMapoverlayBottomLeftLng() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_top_right_lat</code>.
     * The top right latitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public void setMapoverlayTopRightLat(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_top_right_lat</code>.
     * The top right latitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public BigDecimal getMapoverlayTopRightLat() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_top_right_lng</code>.
     * The top right longitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public void setMapoverlayTopRightLng(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_top_right_lng</code>.
     * The top right longitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public BigDecimal getMapoverlayTopRightLng() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlays_is_legend</code>.
     * Flag to indicate whether this is a legend or an actual overlay.
     */
    public void setMapoverlaysIsLegend(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlays_is_legend</code>.
     * Flag to indicate whether this is a legend or an actual overlay.
     */
    public Boolean getMapoverlaysIsLegend() {
        return (Boolean) get(7);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.reference_table</code>.
     * Optionally, other database items can be linked to this. As an example, an
     * overlay can be linked to a climate variable.
     */
    public void setReferenceTable(ViewTableMapoverlaysReferenceTable value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.reference_table</code>.
     * Optionally, other database items can be linked to this. As an example, an
     * overlay can be linked to a climate variable.
     */
    public ViewTableMapoverlaysReferenceTable getReferenceTable() {
        return (ViewTableMapoverlaysReferenceTable) get(8);
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.foreign_id</code>.
     * The foreign id within the reference_table of the linked database object.
     */
    public void setForeignId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.foreign_id</code>.
     * The foreign id within the reference_table of the linked database object.
     */
    public Integer getForeignId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setDatasetId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getDatasetId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.dataset_name</code>.
     * Describes the dataset.
     */
    public void setDatasetName(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.dataset_name</code>.
     * Describes the dataset.
     */
    public String getDatasetName() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.dataset_description</code>. The
     * name of this dataset.
     */
    public void setDatasetDescription(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.dataset_description</code>. The
     * name of this dataset.
     */
    public String getDatasetDescription() {
        return (String) get(12);
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.dataset_type</code>.
     * Describes the experiment type.
     */
    public void setDatasetType(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.dataset_type</code>.
     * Describes the experiment type.
     */
    public String getDatasetType() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.recording_date</code>. A date
     * that is associated with the timepoint when this has been recorded.
     */
    public void setRecordingDate(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.recording_date</code>. A date
     * that is associated with the timepoint when this has been recorded.
     */
    public Timestamp getRecordingDate() {
        return (Timestamp) get(14);
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.created_on</code>.
     * The datetime when this database record has been created.
     */
    public void setCreatedOn(Timestamp value) {
        set(15, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.created_on</code>.
     * The datetime when this database record has been created.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(15);
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.updated_on</code>.
     * The timestamp when this database record has last been updated.
     */
    public void setUpdatedOn(Timestamp value) {
        set(16, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.updated_on</code>.
     * The timestamp when this database record has last been updated.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(16);
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Boolean, ViewTableMapoverlaysReferenceTable, Integer, Integer, String, String, String, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Integer, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Boolean, ViewTableMapoverlaysReferenceTable, Integer, Integer, String, String, String, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_ID;
    }

    @Override
    public Field<String> field2() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_NAME;
    }

    @Override
    public Field<String> field3() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field4() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_BOTTOM_LEFT_LAT;
    }

    @Override
    public Field<BigDecimal> field5() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_BOTTOM_LEFT_LNG;
    }

    @Override
    public Field<BigDecimal> field6() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_TOP_RIGHT_LAT;
    }

    @Override
    public Field<BigDecimal> field7() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAY_TOP_RIGHT_LNG;
    }

    @Override
    public Field<Boolean> field8() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.MAPOVERLAYS_IS_LEGEND;
    }

    @Override
    public Field<ViewTableMapoverlaysReferenceTable> field9() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.REFERENCE_TABLE;
    }

    @Override
    public Field<Integer> field10() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.FOREIGN_ID;
    }

    @Override
    public Field<Integer> field11() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.DATASET_ID;
    }

    @Override
    public Field<String> field12() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.DATASET_NAME;
    }

    @Override
    public Field<String> field13() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.DATASET_DESCRIPTION;
    }

    @Override
    public Field<String> field14() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.DATASET_TYPE;
    }

    @Override
    public Field<Timestamp> field15() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.RECORDING_DATE;
    }

    @Override
    public Field<Timestamp> field16() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field17() {
        return ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getMapoverlayId();
    }

    @Override
    public String component2() {
        return getMapoverlayName();
    }

    @Override
    public String component3() {
        return getMapoverlayDescription();
    }

    @Override
    public BigDecimal component4() {
        return getMapoverlayBottomLeftLat();
    }

    @Override
    public BigDecimal component5() {
        return getMapoverlayBottomLeftLng();
    }

    @Override
    public BigDecimal component6() {
        return getMapoverlayTopRightLat();
    }

    @Override
    public BigDecimal component7() {
        return getMapoverlayTopRightLng();
    }

    @Override
    public Boolean component8() {
        return getMapoverlaysIsLegend();
    }

    @Override
    public ViewTableMapoverlaysReferenceTable component9() {
        return getReferenceTable();
    }

    @Override
    public Integer component10() {
        return getForeignId();
    }

    @Override
    public Integer component11() {
        return getDatasetId();
    }

    @Override
    public String component12() {
        return getDatasetName();
    }

    @Override
    public String component13() {
        return getDatasetDescription();
    }

    @Override
    public String component14() {
        return getDatasetType();
    }

    @Override
    public Timestamp component15() {
        return getRecordingDate();
    }

    @Override
    public Timestamp component16() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component17() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getMapoverlayId();
    }

    @Override
    public String value2() {
        return getMapoverlayName();
    }

    @Override
    public String value3() {
        return getMapoverlayDescription();
    }

    @Override
    public BigDecimal value4() {
        return getMapoverlayBottomLeftLat();
    }

    @Override
    public BigDecimal value5() {
        return getMapoverlayBottomLeftLng();
    }

    @Override
    public BigDecimal value6() {
        return getMapoverlayTopRightLat();
    }

    @Override
    public BigDecimal value7() {
        return getMapoverlayTopRightLng();
    }

    @Override
    public Boolean value8() {
        return getMapoverlaysIsLegend();
    }

    @Override
    public ViewTableMapoverlaysReferenceTable value9() {
        return getReferenceTable();
    }

    @Override
    public Integer value10() {
        return getForeignId();
    }

    @Override
    public Integer value11() {
        return getDatasetId();
    }

    @Override
    public String value12() {
        return getDatasetName();
    }

    @Override
    public String value13() {
        return getDatasetDescription();
    }

    @Override
    public String value14() {
        return getDatasetType();
    }

    @Override
    public Timestamp value15() {
        return getRecordingDate();
    }

    @Override
    public Timestamp value16() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value17() {
        return getUpdatedOn();
    }

    @Override
    public ViewTableMapoverlaysRecord value1(Integer value) {
        setMapoverlayId(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value2(String value) {
        setMapoverlayName(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value3(String value) {
        setMapoverlayDescription(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value4(BigDecimal value) {
        setMapoverlayBottomLeftLat(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value5(BigDecimal value) {
        setMapoverlayBottomLeftLng(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value6(BigDecimal value) {
        setMapoverlayTopRightLat(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value7(BigDecimal value) {
        setMapoverlayTopRightLng(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value8(Boolean value) {
        setMapoverlaysIsLegend(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value9(ViewTableMapoverlaysReferenceTable value) {
        setReferenceTable(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value10(Integer value) {
        setForeignId(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value11(Integer value) {
        setDatasetId(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value12(String value) {
        setDatasetName(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value13(String value) {
        setDatasetDescription(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value14(String value) {
        setDatasetType(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value15(Timestamp value) {
        setRecordingDate(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value16(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord value17(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ViewTableMapoverlaysRecord values(Integer value1, String value2, String value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, Boolean value8, ViewTableMapoverlaysReferenceTable value9, Integer value10, Integer value11, String value12, String value13, String value14, Timestamp value15, Timestamp value16, Timestamp value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTableMapoverlaysRecord
     */
    public ViewTableMapoverlaysRecord() {
        super(ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS);
    }

    /**
     * Create a detached, initialised ViewTableMapoverlaysRecord
     */
    public ViewTableMapoverlaysRecord(Integer mapoverlayId, String mapoverlayName, String mapoverlayDescription, BigDecimal mapoverlayBottomLeftLat, BigDecimal mapoverlayBottomLeftLng, BigDecimal mapoverlayTopRightLat, BigDecimal mapoverlayTopRightLng, Boolean mapoverlaysIsLegend, ViewTableMapoverlaysReferenceTable referenceTable, Integer foreignId, Integer datasetId, String datasetName, String datasetDescription, String datasetType, Timestamp recordingDate, Timestamp createdOn, Timestamp updatedOn) {
        super(ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS);

        setMapoverlayId(mapoverlayId);
        setMapoverlayName(mapoverlayName);
        setMapoverlayDescription(mapoverlayDescription);
        setMapoverlayBottomLeftLat(mapoverlayBottomLeftLat);
        setMapoverlayBottomLeftLng(mapoverlayBottomLeftLng);
        setMapoverlayTopRightLat(mapoverlayTopRightLat);
        setMapoverlayTopRightLng(mapoverlayTopRightLng);
        setMapoverlaysIsLegend(mapoverlaysIsLegend);
        setReferenceTable(referenceTable);
        setForeignId(foreignId);
        setDatasetId(datasetId);
        setDatasetName(datasetName);
        setDatasetDescription(datasetDescription);
        setDatasetType(datasetType);
        setRecordingDate(recordingDate);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ViewTableMapoverlaysRecord
     */
    public ViewTableMapoverlaysRecord(jhi.germinate.server.database.codegen.tables.pojos.ViewTableMapoverlays value) {
        super(ViewTableMapoverlays.VIEW_TABLE_MAPOVERLAYS);

        if (value != null) {
            setMapoverlayId(value.getMapoverlayId());
            setMapoverlayName(value.getMapoverlayName());
            setMapoverlayDescription(value.getMapoverlayDescription());
            setMapoverlayBottomLeftLat(value.getMapoverlayBottomLeftLat());
            setMapoverlayBottomLeftLng(value.getMapoverlayBottomLeftLng());
            setMapoverlayTopRightLat(value.getMapoverlayTopRightLat());
            setMapoverlayTopRightLng(value.getMapoverlayTopRightLng());
            setMapoverlaysIsLegend(value.getMapoverlaysIsLegend());
            setReferenceTable(value.getReferenceTable());
            setForeignId(value.getForeignId());
            setDatasetId(value.getDatasetId());
            setDatasetName(value.getDatasetName());
            setDatasetDescription(value.getDatasetDescription());
            setDatasetType(value.getDatasetType());
            setRecordingDate(value.getRecordingDate());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
