/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.tables.Mapfeaturetypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * Defines features which can exist on maps. In general this will be the marker
 * type but it can also be used to identify QTL regions.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MapfeaturetypesRecord extends UpdatableRecordImpl<MapfeaturetypesRecord> implements Record4<Integer, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.mapfeaturetypes.id</code>. Primary id for
     * this table. This uniquely identifies the row.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.mapfeaturetypes.id</code>. Primary id for
     * this table. This uniquely identifies the row.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.mapfeaturetypes.description</code>.
     * Description of the feature type. This could include a definition of the
     * marker type such as 'SNP', 'KASP' or 'AFLP'.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.mapfeaturetypes.description</code>.
     * Description of the feature type. This could include a definition of the
     * marker type such as 'SNP', 'KASP' or 'AFLP'.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_db.mapfeaturetypes.created_on</code>. When the
     * record was created.
     */
    public void setCreatedOn(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.mapfeaturetypes.created_on</code>. When the
     * record was created.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>germinate_db.mapfeaturetypes.updated_on</code>. When the
     * record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_db.mapfeaturetypes.updated_on</code>. When the
     * record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Timestamp, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Mapfeaturetypes.MAPFEATURETYPES.ID;
    }

    @Override
    public Field<String> field2() {
        return Mapfeaturetypes.MAPFEATURETYPES.DESCRIPTION;
    }

    @Override
    public Field<Timestamp> field3() {
        return Mapfeaturetypes.MAPFEATURETYPES.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field4() {
        return Mapfeaturetypes.MAPFEATURETYPES.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public Timestamp component3() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component4() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public Timestamp value3() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value4() {
        return getUpdatedOn();
    }

    @Override
    public MapfeaturetypesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MapfeaturetypesRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public MapfeaturetypesRecord value3(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public MapfeaturetypesRecord value4(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public MapfeaturetypesRecord values(Integer value1, String value2, Timestamp value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MapfeaturetypesRecord
     */
    public MapfeaturetypesRecord() {
        super(Mapfeaturetypes.MAPFEATURETYPES);
    }

    /**
     * Create a detached, initialised MapfeaturetypesRecord
     */
    public MapfeaturetypesRecord(Integer id, String description, Timestamp createdOn, Timestamp updatedOn) {
        super(Mapfeaturetypes.MAPFEATURETYPES);

        setId(id);
        setDescription(description);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised MapfeaturetypesRecord
     */
    public MapfeaturetypesRecord(jhi.germinate.server.database.codegen.tables.pojos.Mapfeaturetypes value) {
        super(Mapfeaturetypes.MAPFEATURETYPES);

        if (value != null) {
            setId(value.getId());
            setDescription(value.getDescription());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
