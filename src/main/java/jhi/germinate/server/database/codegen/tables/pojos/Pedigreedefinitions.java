/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


// @formatter:off
/**
 * This table holds the actual pedigree definition data.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pedigreedefinitions implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private Integer   datasetId;
    private Integer   germinatebaseId;
    private Integer   pedigreenotationId;
    private Integer   pedigreedescriptionId;
    private String    definition;
    private Timestamp createdOn;
    private Timestamp updatedOn;

    public Pedigreedefinitions() {}

    public Pedigreedefinitions(Pedigreedefinitions value) {
        this.id = value.id;
        this.datasetId = value.datasetId;
        this.germinatebaseId = value.germinatebaseId;
        this.pedigreenotationId = value.pedigreenotationId;
        this.pedigreedescriptionId = value.pedigreedescriptionId;
        this.definition = value.definition;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Pedigreedefinitions(
        Integer   id,
        Integer   datasetId,
        Integer   germinatebaseId,
        Integer   pedigreenotationId,
        Integer   pedigreedescriptionId,
        String    definition,
        Timestamp createdOn,
        Timestamp updatedOn
    ) {
        this.id = id;
        this.datasetId = datasetId;
        this.germinatebaseId = germinatebaseId;
        this.pedigreenotationId = pedigreenotationId;
        this.pedigreedescriptionId = pedigreedescriptionId;
        this.definition = definition;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>germinate_db.pedigreedefinitions.id</code>. Primary id
     * for this table. This uniquely identifies the row.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>germinate_db.pedigreedefinitions.id</code>. Primary id
     * for this table. This uniquely identifies the row.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>germinate_db.pedigreedefinitions.dataset_id</code>.
     */
    public Integer getDatasetId() {
        return this.datasetId;
    }

    /**
     * Setter for <code>germinate_db.pedigreedefinitions.dataset_id</code>.
     */
    public void setDatasetId(Integer datasetId) {
        this.datasetId = datasetId;
    }

    /**
     * Getter for
     * <code>germinate_db.pedigreedefinitions.germinatebase_id</code>. Foreign
     * key to germinatebase (germinatebase.id).
     */
    public Integer getGerminatebaseId() {
        return this.germinatebaseId;
    }

    /**
     * Setter for
     * <code>germinate_db.pedigreedefinitions.germinatebase_id</code>. Foreign
     * key to germinatebase (germinatebase.id).
     */
    public void setGerminatebaseId(Integer germinatebaseId) {
        this.germinatebaseId = germinatebaseId;
    }

    /**
     * Getter for
     * <code>germinate_db.pedigreedefinitions.pedigreenotation_id</code>.
     * Foreign key to pedigreenotations (pedigreenotations.id).
     */
    public Integer getPedigreenotationId() {
        return this.pedigreenotationId;
    }

    /**
     * Setter for
     * <code>germinate_db.pedigreedefinitions.pedigreenotation_id</code>.
     * Foreign key to pedigreenotations (pedigreenotations.id).
     */
    public void setPedigreenotationId(Integer pedigreenotationId) {
        this.pedigreenotationId = pedigreenotationId;
    }

    /**
     * Getter for
     * <code>germinate_db.pedigreedefinitions.pedigreedescription_id</code>.
     */
    public Integer getPedigreedescriptionId() {
        return this.pedigreedescriptionId;
    }

    /**
     * Setter for
     * <code>germinate_db.pedigreedefinitions.pedigreedescription_id</code>.
     */
    public void setPedigreedescriptionId(Integer pedigreedescriptionId) {
        this.pedigreedescriptionId = pedigreedescriptionId;
    }

    /**
     * Getter for <code>germinate_db.pedigreedefinitions.definition</code>. The
     * pedigree string which is used to represent the germinatebase entry.
     */
    public String getDefinition() {
        return this.definition;
    }

    /**
     * Setter for <code>germinate_db.pedigreedefinitions.definition</code>. The
     * pedigree string which is used to represent the germinatebase entry.
     */
    public void setDefinition(String definition) {
        this.definition = definition;
    }

    /**
     * Getter for <code>germinate_db.pedigreedefinitions.created_on</code>. When
     * the record was created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>germinate_db.pedigreedefinitions.created_on</code>. When
     * the record was created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>germinate_db.pedigreedefinitions.updated_on</code>. When
     * the record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>germinate_db.pedigreedefinitions.updated_on</code>. When
     * the record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Pedigreedefinitions (");

        sb.append(id);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(germinatebaseId);
        sb.append(", ").append(pedigreenotationId);
        sb.append(", ").append(pedigreedescriptionId);
        sb.append(", ").append(definition);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
