/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;

import jhi.germinate.server.database.binding.IntArrayBinding;
import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.enums.DatasetExportJobsStatus;
import jhi.germinate.server.database.codegen.tables.records.DatasetExportJobsRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetExportJobs extends TableImpl<DatasetExportJobsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>germinate_db.dataset_export_jobs</code>
     */
    public static final DatasetExportJobs DATASET_EXPORT_JOBS = new DatasetExportJobs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DatasetExportJobsRecord> getRecordType() {
        return DatasetExportJobsRecord.class;
    }

    /**
     * The column <code>germinate_db.dataset_export_jobs.id</code>.
     */
    public final TableField<DatasetExportJobsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.uuid</code>.
     */
    public final TableField<DatasetExportJobsRecord, String> UUID = createField(DSL.name("uuid"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.job_id</code>.
     */
    public final TableField<DatasetExportJobsRecord, String> JOB_ID = createField(DSL.name("job_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.user_id</code>.
     */
    public final TableField<DatasetExportJobsRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.status</code>.
     */
    public final TableField<DatasetExportJobsRecord, DatasetExportJobsStatus> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(9).nullable(false).defaultValue(DSL.inline("waiting", SQLDataType.VARCHAR)).asEnumDataType(jhi.germinate.server.database.codegen.enums.DatasetExportJobsStatus.class), this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.visibility</code>.
     */
    public final TableField<DatasetExportJobsRecord, Boolean> VISIBILITY = createField(DSL.name("visibility"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.datasettype_id</code>.
     */
    public final TableField<DatasetExportJobsRecord, Integer> DATASETTYPE_ID = createField(DSL.name("datasettype_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.dataset_ids</code>.
     */
    public final TableField<DatasetExportJobsRecord, Integer[]> DATASET_IDS = createField(DSL.name("dataset_ids"), SQLDataType.JSON, this, "", new IntArrayBinding());

    /**
     * The column <code>germinate_db.dataset_export_jobs.result_size</code>.
     */
    public final TableField<DatasetExportJobsRecord, Long> RESULT_SIZE = createField(DSL.name("result_size"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.created_on</code>.
     */
    public final TableField<DatasetExportJobsRecord, Timestamp> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMP(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>germinate_db.dataset_export_jobs.updated_on</code>.
     */
    public final TableField<DatasetExportJobsRecord, Timestamp> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMP(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private DatasetExportJobs(Name alias, Table<DatasetExportJobsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DatasetExportJobs(Name alias, Table<DatasetExportJobsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>germinate_db.dataset_export_jobs</code> table
     * reference
     */
    public DatasetExportJobs(String alias) {
        this(DSL.name(alias), DATASET_EXPORT_JOBS);
    }

    /**
     * Create an aliased <code>germinate_db.dataset_export_jobs</code> table
     * reference
     */
    public DatasetExportJobs(Name alias) {
        this(alias, DATASET_EXPORT_JOBS);
    }

    /**
     * Create a <code>germinate_db.dataset_export_jobs</code> table reference
     */
    public DatasetExportJobs() {
        this(DSL.name("dataset_export_jobs"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : GerminateDb.GERMINATE_DB;
    }

    @Override
    public Identity<DatasetExportJobsRecord, Integer> getIdentity() {
        return (Identity<DatasetExportJobsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<DatasetExportJobsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(DatasetExportJobs.DATASET_EXPORT_JOBS, DSL.name("KEY_dataset_export_jobs_PRIMARY"), new TableField[] { DatasetExportJobs.DATASET_EXPORT_JOBS.ID }, true);
    }

    @Override
    public DatasetExportJobs as(String alias) {
        return new DatasetExportJobs(DSL.name(alias), this);
    }

    @Override
    public DatasetExportJobs as(Name alias) {
        return new DatasetExportJobs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DatasetExportJobs rename(String name) {
        return new DatasetExportJobs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DatasetExportJobs rename(Name name) {
        return new DatasetExportJobs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, Integer, DatasetExportJobsStatus, Boolean, Integer, Integer[], Long, Timestamp, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
    // @formatter:on
}
