/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableComments implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   commentId;
    private Integer   commentTypeId;
    private String    commentType;
    private Integer   commentForeignId;
    private Integer   userId;
    private String    userName;
    private String    commentContent;
    private Timestamp updatedOn;

    public ViewTableComments() {}

    public ViewTableComments(ViewTableComments value) {
        this.commentId = value.commentId;
        this.commentTypeId = value.commentTypeId;
        this.commentType = value.commentType;
        this.commentForeignId = value.commentForeignId;
        this.userId = value.userId;
        this.userName = value.userName;
        this.commentContent = value.commentContent;
        this.updatedOn = value.updatedOn;
    }

    public ViewTableComments(
        Integer   commentId,
        Integer   commentTypeId,
        String    commentType,
        Integer   commentForeignId,
        Integer   userId,
        String    userName,
        String    commentContent,
        Timestamp updatedOn
    ) {
        this.commentId = commentId;
        this.commentTypeId = commentTypeId;
        this.commentType = commentType;
        this.commentForeignId = commentForeignId;
        this.userId = userId;
        this.userName = userName;
        this.commentContent = commentContent;
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableComments (");

        sb.append(commentId);
        sb.append(", ").append(commentTypeId);
        sb.append(", ").append(commentType);
        sb.append(", ").append(commentForeignId);
        sb.append(", ").append(userId);
        sb.append(", ").append(userName);
        sb.append(", ").append(commentContent);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
