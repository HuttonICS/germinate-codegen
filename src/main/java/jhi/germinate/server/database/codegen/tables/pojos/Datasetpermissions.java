/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


// @formatter:off
/**
 * This defines which users can view which datasets. Requires Germinate
 * Gatekeeper. This overrides the datasets state.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Datasetpermissions implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private Integer   datasetId;
    private Integer   userId;
    private Integer   groupId;
    private Timestamp createdOn;
    private Timestamp updatedOn;

    public Datasetpermissions() {}

    public Datasetpermissions(Datasetpermissions value) {
        this.id = value.id;
        this.datasetId = value.datasetId;
        this.userId = value.userId;
        this.groupId = value.groupId;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Datasetpermissions(
        Integer   id,
        Integer   datasetId,
        Integer   userId,
        Integer   groupId,
        Timestamp createdOn,
        Timestamp updatedOn
    ) {
        this.id = id;
        this.datasetId = datasetId;
        this.userId = userId;
        this.groupId = groupId;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>germinate_db.datasetpermissions.id</code>. Primary id
     * for this table. This uniquely identifies the row.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>germinate_db.datasetpermissions.id</code>. Primary id
     * for this table. This uniquely identifies the row.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>germinate_db.datasetpermissions.dataset_id</code>.
     * Foreign key to datasets (datasets.id).
     */
    public Integer getDatasetId() {
        return this.datasetId;
    }

    /**
     * Setter for <code>germinate_db.datasetpermissions.dataset_id</code>.
     * Foreign key to datasets (datasets.id).
     */
    public void setDatasetId(Integer datasetId) {
        this.datasetId = datasetId;
    }

    /**
     * Getter for <code>germinate_db.datasetpermissions.user_id</code>. Foreign
     * key to Gatekeeper users (Gatekeeper usersid).
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>germinate_db.datasetpermissions.user_id</code>. Foreign
     * key to Gatekeeper users (Gatekeeper usersid).
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>germinate_db.datasetpermissions.group_id</code>. Foreign
     * key to usergroups table.
     */
    public Integer getGroupId() {
        return this.groupId;
    }

    /**
     * Setter for <code>germinate_db.datasetpermissions.group_id</code>. Foreign
     * key to usergroups table.
     */
    public void setGroupId(Integer groupId) {
        this.groupId = groupId;
    }

    /**
     * Getter for <code>germinate_db.datasetpermissions.created_on</code>. When
     * the record was created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>germinate_db.datasetpermissions.created_on</code>. When
     * the record was created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>germinate_db.datasetpermissions.updated_on</code>. When
     * the record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>germinate_db.datasetpermissions.updated_on</code>. When
     * the record was updated. This may be different from the created on date if
     * subsequent changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Datasetpermissions (");

        sb.append(id);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(userId);
        sb.append(", ").append(groupId);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
