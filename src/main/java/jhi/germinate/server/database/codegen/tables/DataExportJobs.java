/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;

import jhi.germinate.server.database.binding.ExportJobDetailsBinding;
import jhi.germinate.server.database.binding.IntArrayBinding;
import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.enums.DataExportJobsDatatype;
import jhi.germinate.server.database.codegen.enums.DataExportJobsStatus;
import jhi.germinate.server.database.codegen.tables.records.DataExportJobsRecord;
import jhi.germinate.server.database.pojo.ExportJobDetails;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataExportJobs extends TableImpl<DataExportJobsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>germinate_db.data_export_jobs</code>
     */
    public static final DataExportJobs DATA_EXPORT_JOBS = new DataExportJobs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataExportJobsRecord> getRecordType() {
        return DataExportJobsRecord.class;
    }

    /**
     * The column <code>germinate_db.data_export_jobs.id</code>.
     */
    public final TableField<DataExportJobsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.uuid</code>.
     */
    public final TableField<DataExportJobsRecord, String> UUID = createField(DSL.name("uuid"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.job_id</code>.
     */
    public final TableField<DataExportJobsRecord, String> JOB_ID = createField(DSL.name("job_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.job_config</code>.
     */
    public final TableField<DataExportJobsRecord, ExportJobDetails> JOB_CONFIG = createField(DSL.name("job_config"), SQLDataType.JSON, this, "", new ExportJobDetailsBinding());

    /**
     * The column <code>germinate_db.data_export_jobs.user_id</code>.
     */
    public final TableField<DataExportJobsRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.status</code>.
     */
    public final TableField<DataExportJobsRecord, DataExportJobsStatus> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(9).nullable(false).defaultValue(DSL.inline("waiting", SQLDataType.VARCHAR)).asEnumDataType(jhi.germinate.server.database.codegen.enums.DataExportJobsStatus.class), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.visibility</code>.
     */
    public final TableField<DataExportJobsRecord, Boolean> VISIBILITY = createField(DSL.name("visibility"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.datatype</code>.
     */
    public final TableField<DataExportJobsRecord, DataExportJobsDatatype> DATATYPE = createField(DSL.name("datatype"), SQLDataType.VARCHAR(10).nullable(false).defaultValue(DSL.inline("unknown", SQLDataType.VARCHAR)).asEnumDataType(jhi.germinate.server.database.codegen.enums.DataExportJobsDatatype.class), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.dataset_ids</code>.
     */
    public final TableField<DataExportJobsRecord, Integer[]> DATASET_IDS = createField(DSL.name("dataset_ids"), SQLDataType.JSON, this, "", new IntArrayBinding());

    /**
     * The column <code>germinate_db.data_export_jobs.result_size</code>.
     */
    public final TableField<DataExportJobsRecord, Long> RESULT_SIZE = createField(DSL.name("result_size"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.created_on</code>.
     */
    public final TableField<DataExportJobsRecord, Timestamp> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMP(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>germinate_db.data_export_jobs.updated_on</code>.
     */
    public final TableField<DataExportJobsRecord, Timestamp> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMP(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private DataExportJobs(Name alias, Table<DataExportJobsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataExportJobs(Name alias, Table<DataExportJobsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>germinate_db.data_export_jobs</code> table
     * reference
     */
    public DataExportJobs(String alias) {
        this(DSL.name(alias), DATA_EXPORT_JOBS);
    }

    /**
     * Create an aliased <code>germinate_db.data_export_jobs</code> table
     * reference
     */
    public DataExportJobs(Name alias) {
        this(alias, DATA_EXPORT_JOBS);
    }

    /**
     * Create a <code>germinate_db.data_export_jobs</code> table reference
     */
    public DataExportJobs() {
        this(DSL.name("data_export_jobs"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : GerminateDb.GERMINATE_DB;
    }

    @Override
    public Identity<DataExportJobsRecord, Integer> getIdentity() {
        return (Identity<DataExportJobsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<DataExportJobsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(DataExportJobs.DATA_EXPORT_JOBS, DSL.name("KEY_data_export_jobs_PRIMARY"), new TableField[] { DataExportJobs.DATA_EXPORT_JOBS.ID }, true);
    }

    @Override
    public DataExportJobs as(String alias) {
        return new DataExportJobs(DSL.name(alias), this);
    }

    @Override
    public DataExportJobs as(Name alias) {
        return new DataExportJobs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataExportJobs rename(String name) {
        return new DataExportJobs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataExportJobs rename(Name name) {
        return new DataExportJobs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, ExportJobDetails, Integer, DataExportJobsStatus, Boolean, DataExportJobsDatatype, Integer[], Long, Timestamp, Timestamp> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
    // @formatter:on
}
