/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.tables.Imagetags;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImagetagsRecord extends UpdatableRecordImpl<ImagetagsRecord> implements Record4<Integer, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.imagetags.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.imagetags.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.imagetags.tag_name</code>.
     */
    public void setTagName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.imagetags.tag_name</code>.
     */
    public String getTagName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_db.imagetags.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.imagetags.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>germinate_db.imagetags.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_db.imagetags.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Timestamp, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Imagetags.IMAGETAGS.ID;
    }

    @Override
    public Field<String> field2() {
        return Imagetags.IMAGETAGS.TAG_NAME;
    }

    @Override
    public Field<Timestamp> field3() {
        return Imagetags.IMAGETAGS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field4() {
        return Imagetags.IMAGETAGS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTagName();
    }

    @Override
    public Timestamp component3() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component4() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTagName();
    }

    @Override
    public Timestamp value3() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value4() {
        return getUpdatedOn();
    }

    @Override
    public ImagetagsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ImagetagsRecord value2(String value) {
        setTagName(value);
        return this;
    }

    @Override
    public ImagetagsRecord value3(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ImagetagsRecord value4(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ImagetagsRecord values(Integer value1, String value2, Timestamp value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImagetagsRecord
     */
    public ImagetagsRecord() {
        super(Imagetags.IMAGETAGS);
    }

    /**
     * Create a detached, initialised ImagetagsRecord
     */
    public ImagetagsRecord(Integer id, String tagName, Timestamp createdOn, Timestamp updatedOn) {
        super(Imagetags.IMAGETAGS);

        setId(id);
        setTagName(tagName);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ImagetagsRecord
     */
    public ImagetagsRecord(jhi.germinate.server.database.codegen.tables.pojos.Imagetags value) {
        super(Imagetags.IMAGETAGS);

        if (value != null) {
            setId(value.getId());
            setTagName(value.getTagName());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
