/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.enums.UserfeedbackFeedbackType;
import jhi.germinate.server.database.codegen.enums.UserfeedbackSeverity;
import jhi.germinate.server.database.codegen.tables.Userfeedback;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserfeedbackRecord extends UpdatableRecordImpl<UserfeedbackRecord> implements Record11<Integer, String, byte[], String, Integer, String, UserfeedbackFeedbackType, UserfeedbackSeverity, Boolean, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.userfeedback.id</code>. Auto-incremented
     * primary key.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.id</code>. Auto-incremented
     * primary key.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.content</code>. Feedback
     * content.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.content</code>. Feedback
     * content.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.image</code>. Optional
     * interface screenshot.
     */
    public void setImage(byte[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.image</code>. Optional
     * interface screenshot.
     */
    public byte[] getImage() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.page_url</code>. The URL of
     * the page the user was looking at.
     */
    public void setPageUrl(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.page_url</code>. The URL of
     * the page the user was looking at.
     */
    public String getPageUrl() {
        return (String) get(3);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.user_id</code>. Optional user
     * id if user was logged in.
     */
    public void setUserId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.user_id</code>. Optional user
     * id if user was logged in.
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.contact_email</code>. Contact
     * email address.
     */
    public void setContactEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.contact_email</code>. Contact
     * email address.
     */
    public String getContactEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.feedback_type</code>. The type
     * of feedback.
     */
    public void setFeedbackType(UserfeedbackFeedbackType value) {
        set(6, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.feedback_type</code>. The type
     * of feedback.
     */
    public UserfeedbackFeedbackType getFeedbackType() {
        return (UserfeedbackFeedbackType) get(6);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.severity</code>. The estimated
     * severity of the issue.
     */
    public void setSeverity(UserfeedbackSeverity value) {
        set(7, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.severity</code>. The estimated
     * severity of the issue.
     */
    public UserfeedbackSeverity getSeverity() {
        return (UserfeedbackSeverity) get(7);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.is_new</code>. Indicates
     * whether this is new feedback or has been seen before.
     */
    public void setIsNew(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.is_new</code>. Indicates
     * whether this is new feedback or has been seen before.
     */
    public Boolean getIsNew() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.created_on</code>. When this
     * database record has been created.
     */
    public void setCreatedOn(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.created_on</code>. When this
     * database record has been created.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>germinate_db.userfeedback.updated_on</code>. When this
     * database record has last been updated.
     */
    public void setUpdatedOn(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>germinate_db.userfeedback.updated_on</code>. When this
     * database record has last been updated.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, byte[], String, Integer, String, UserfeedbackFeedbackType, UserfeedbackSeverity, Boolean, Timestamp, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, byte[], String, Integer, String, UserfeedbackFeedbackType, UserfeedbackSeverity, Boolean, Timestamp, Timestamp> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Userfeedback.USERFEEDBACK.ID;
    }

    @Override
    public Field<String> field2() {
        return Userfeedback.USERFEEDBACK.CONTENT;
    }

    @Override
    public Field<byte[]> field3() {
        return Userfeedback.USERFEEDBACK.IMAGE;
    }

    @Override
    public Field<String> field4() {
        return Userfeedback.USERFEEDBACK.PAGE_URL;
    }

    @Override
    public Field<Integer> field5() {
        return Userfeedback.USERFEEDBACK.USER_ID;
    }

    @Override
    public Field<String> field6() {
        return Userfeedback.USERFEEDBACK.CONTACT_EMAIL;
    }

    @Override
    public Field<UserfeedbackFeedbackType> field7() {
        return Userfeedback.USERFEEDBACK.FEEDBACK_TYPE;
    }

    @Override
    public Field<UserfeedbackSeverity> field8() {
        return Userfeedback.USERFEEDBACK.SEVERITY;
    }

    @Override
    public Field<Boolean> field9() {
        return Userfeedback.USERFEEDBACK.IS_NEW;
    }

    @Override
    public Field<Timestamp> field10() {
        return Userfeedback.USERFEEDBACK.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field11() {
        return Userfeedback.USERFEEDBACK.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public byte[] component3() {
        return getImage();
    }

    @Override
    public String component4() {
        return getPageUrl();
    }

    @Override
    public Integer component5() {
        return getUserId();
    }

    @Override
    public String component6() {
        return getContactEmail();
    }

    @Override
    public UserfeedbackFeedbackType component7() {
        return getFeedbackType();
    }

    @Override
    public UserfeedbackSeverity component8() {
        return getSeverity();
    }

    @Override
    public Boolean component9() {
        return getIsNew();
    }

    @Override
    public Timestamp component10() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component11() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public byte[] value3() {
        return getImage();
    }

    @Override
    public String value4() {
        return getPageUrl();
    }

    @Override
    public Integer value5() {
        return getUserId();
    }

    @Override
    public String value6() {
        return getContactEmail();
    }

    @Override
    public UserfeedbackFeedbackType value7() {
        return getFeedbackType();
    }

    @Override
    public UserfeedbackSeverity value8() {
        return getSeverity();
    }

    @Override
    public Boolean value9() {
        return getIsNew();
    }

    @Override
    public Timestamp value10() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value11() {
        return getUpdatedOn();
    }

    @Override
    public UserfeedbackRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value3(byte[] value) {
        setImage(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value4(String value) {
        setPageUrl(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value6(String value) {
        setContactEmail(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value7(UserfeedbackFeedbackType value) {
        setFeedbackType(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value8(UserfeedbackSeverity value) {
        setSeverity(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value9(Boolean value) {
        setIsNew(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value10(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public UserfeedbackRecord value11(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public UserfeedbackRecord values(Integer value1, String value2, byte[] value3, String value4, Integer value5, String value6, UserfeedbackFeedbackType value7, UserfeedbackSeverity value8, Boolean value9, Timestamp value10, Timestamp value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserfeedbackRecord
     */
    public UserfeedbackRecord() {
        super(Userfeedback.USERFEEDBACK);
    }

    /**
     * Create a detached, initialised UserfeedbackRecord
     */
    public UserfeedbackRecord(Integer id, String content, byte[] image, String pageUrl, Integer userId, String contactEmail, UserfeedbackFeedbackType feedbackType, UserfeedbackSeverity severity, Boolean isNew, Timestamp createdOn, Timestamp updatedOn) {
        super(Userfeedback.USERFEEDBACK);

        setId(id);
        setContent(content);
        setImage(image);
        setPageUrl(pageUrl);
        setUserId(userId);
        setContactEmail(contactEmail);
        setFeedbackType(feedbackType);
        setSeverity(severity);
        setIsNew(isNew);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised UserfeedbackRecord
     */
    public UserfeedbackRecord(jhi.germinate.server.database.codegen.tables.pojos.Userfeedback value) {
        super(Userfeedback.USERFEEDBACK);

        if (value != null) {
            setId(value.getId());
            setContent(value.getContent());
            setImage(value.getImage());
            setPageUrl(value.getPageUrl());
            setUserId(value.getUserId());
            setContactEmail(value.getContactEmail());
            setFeedbackType(value.getFeedbackType());
            setSeverity(value.getSeverity());
            setIsNew(value.getIsNew());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
