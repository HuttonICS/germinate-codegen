/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.tables.Licenselogs;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LicenselogsRecord extends UpdatableRecordImpl<LicenselogsRecord> implements Record4<Integer, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.licenselogs.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.licenselogs.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.licenselogs.license_id</code>.
     */
    public void setLicenseId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.licenselogs.license_id</code>.
     */
    public Integer getLicenseId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>germinate_db.licenselogs.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.licenselogs.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>germinate_db.licenselogs.accepted_on</code>.
     */
    public void setAcceptedOn(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_db.licenselogs.accepted_on</code>.
     */
    public Timestamp getAcceptedOn() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Licenselogs.LICENSELOGS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Licenselogs.LICENSELOGS.LICENSE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Licenselogs.LICENSELOGS.USER_ID;
    }

    @Override
    public Field<Timestamp> field4() {
        return Licenselogs.LICENSELOGS.ACCEPTED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getLicenseId();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public Timestamp component4() {
        return getAcceptedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getLicenseId();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public Timestamp value4() {
        return getAcceptedOn();
    }

    @Override
    public LicenselogsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public LicenselogsRecord value2(Integer value) {
        setLicenseId(value);
        return this;
    }

    @Override
    public LicenselogsRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public LicenselogsRecord value4(Timestamp value) {
        setAcceptedOn(value);
        return this;
    }

    @Override
    public LicenselogsRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LicenselogsRecord
     */
    public LicenselogsRecord() {
        super(Licenselogs.LICENSELOGS);
    }

    /**
     * Create a detached, initialised LicenselogsRecord
     */
    public LicenselogsRecord(Integer id, Integer licenseId, Integer userId, Timestamp acceptedOn) {
        super(Licenselogs.LICENSELOGS);

        setId(id);
        setLicenseId(licenseId);
        setUserId(userId);
        setAcceptedOn(acceptedOn);
    }

    /**
     * Create a detached, initialised LicenselogsRecord
     */
    public LicenselogsRecord(jhi.germinate.server.database.codegen.tables.pojos.Licenselogs value) {
        super(Licenselogs.LICENSELOGS);

        if (value != null) {
            setId(value.getId());
            setLicenseId(value.getLicenseId());
            setUserId(value.getUserId());
            setAcceptedOn(value.getAcceptedOn());
        }
    }
    // @formatter:on
}
