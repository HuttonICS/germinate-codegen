/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableClimateData implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer    locationId;
    private String     locationName;
    private String     locationRegion;
    private String     locationState;
    private String     locationType;
    private BigDecimal locationLatitude;
    private BigDecimal locationLongitude;
    private BigDecimal locationElevation;
    private String     countryName;
    private String     countryCode2;
    private String     countryCode3;
    private Integer    datasetId;
    private String     datasetName;
    private String     datasetDescription;
    private Integer    climateId;
    private String     climateName;
    private String     climateNameShort;
    private String     unitName;
    private Timestamp  recordingDate;
    private Double     climateValue;

    public ViewTableClimateData() {}

    public ViewTableClimateData(ViewTableClimateData value) {
        this.locationId = value.locationId;
        this.locationName = value.locationName;
        this.locationRegion = value.locationRegion;
        this.locationState = value.locationState;
        this.locationType = value.locationType;
        this.locationLatitude = value.locationLatitude;
        this.locationLongitude = value.locationLongitude;
        this.locationElevation = value.locationElevation;
        this.countryName = value.countryName;
        this.countryCode2 = value.countryCode2;
        this.countryCode3 = value.countryCode3;
        this.datasetId = value.datasetId;
        this.datasetName = value.datasetName;
        this.datasetDescription = value.datasetDescription;
        this.climateId = value.climateId;
        this.climateName = value.climateName;
        this.climateNameShort = value.climateNameShort;
        this.unitName = value.unitName;
        this.recordingDate = value.recordingDate;
        this.climateValue = value.climateValue;
    }

    public ViewTableClimateData(
        Integer    locationId,
        String     locationName,
        String     locationRegion,
        String     locationState,
        String     locationType,
        BigDecimal locationLatitude,
        BigDecimal locationLongitude,
        BigDecimal locationElevation,
        String     countryName,
        String     countryCode2,
        String     countryCode3,
        Integer    datasetId,
        String     datasetName,
        String     datasetDescription,
        Integer    climateId,
        String     climateName,
        String     climateNameShort,
        String     unitName,
        Timestamp  recordingDate,
        Double     climateValue
    ) {
        this.locationId = locationId;
        this.locationName = locationName;
        this.locationRegion = locationRegion;
        this.locationState = locationState;
        this.locationType = locationType;
        this.locationLatitude = locationLatitude;
        this.locationLongitude = locationLongitude;
        this.locationElevation = locationElevation;
        this.countryName = countryName;
        this.countryCode2 = countryCode2;
        this.countryCode3 = countryCode3;
        this.datasetId = datasetId;
        this.datasetName = datasetName;
        this.datasetDescription = datasetDescription;
        this.climateId = climateId;
        this.climateName = climateName;
        this.climateNameShort = climateNameShort;
        this.unitName = unitName;
        this.recordingDate = recordingDate;
        this.climateValue = climateValue;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableClimateData (");

        sb.append(locationId);
        sb.append(", ").append(locationName);
        sb.append(", ").append(locationRegion);
        sb.append(", ").append(locationState);
        sb.append(", ").append(locationType);
        sb.append(", ").append(locationLatitude);
        sb.append(", ").append(locationLongitude);
        sb.append(", ").append(locationElevation);
        sb.append(", ").append(countryName);
        sb.append(", ").append(countryCode2);
        sb.append(", ").append(countryCode3);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(datasetName);
        sb.append(", ").append(datasetDescription);
        sb.append(", ").append(climateId);
        sb.append(", ").append(climateName);
        sb.append(", ").append(climateNameShort);
        sb.append(", ").append(unitName);
        sb.append(", ").append(recordingDate);
        sb.append(", ").append(climateValue);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
