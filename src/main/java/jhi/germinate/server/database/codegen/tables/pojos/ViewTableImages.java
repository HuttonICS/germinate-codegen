/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Arrays;

import jhi.germinate.server.database.pojo.Exif;
import jhi.germinate.server.database.pojo.ImageTag;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableImages implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer    imageId;
    private String     imageDescription;
    private Integer    imageForeignId;
    private Boolean    imageIsReference;
    private String     imagePath;
    private Exif       imageExif;
    private String     imageType;
    private String     imageRefTable;
    private String     referenceName;
    private Timestamp  createdOn;
    private ImageTag[] tags;

    public ViewTableImages() {}

    public ViewTableImages(ViewTableImages value) {
        this.imageId = value.imageId;
        this.imageDescription = value.imageDescription;
        this.imageForeignId = value.imageForeignId;
        this.imageIsReference = value.imageIsReference;
        this.imagePath = value.imagePath;
        this.imageExif = value.imageExif;
        this.imageType = value.imageType;
        this.imageRefTable = value.imageRefTable;
        this.referenceName = value.referenceName;
        this.createdOn = value.createdOn;
        this.tags = value.tags;
    }

    public ViewTableImages(
        Integer    imageId,
        String     imageDescription,
        Integer    imageForeignId,
        Boolean    imageIsReference,
        String     imagePath,
        Exif       imageExif,
        String     imageType,
        String     imageRefTable,
        String     referenceName,
        Timestamp  createdOn,
        ImageTag[] tags
    ) {
        this.imageId = imageId;
        this.imageDescription = imageDescription;
        this.imageForeignId = imageForeignId;
        this.imageIsReference = imageIsReference;
        this.imagePath = imagePath;
        this.imageExif = imageExif;
        this.imageType = imageType;
        this.imageRefTable = imageRefTable;
        this.referenceName = referenceName;
        this.createdOn = createdOn;
        this.tags = tags;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableImages (");

        sb.append(imageId);
        sb.append(", ").append(imageDescription);
        sb.append(", ").append(imageForeignId);
        sb.append(", ").append(imageIsReference);
        sb.append(", ").append(imagePath);
        sb.append(", ").append(imageExif);
        sb.append(", ").append(imageType);
        sb.append(", ").append(imageRefTable);
        sb.append(", ").append(referenceName);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(Arrays.toString(tags));

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
