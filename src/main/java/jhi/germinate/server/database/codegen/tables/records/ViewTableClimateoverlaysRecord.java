/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import jhi.germinate.server.database.codegen.tables.ViewTableClimateoverlays;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableClimateoverlaysRecord extends TableRecordImpl<ViewTableClimateoverlaysRecord> implements Record9<Integer, Integer, String, Boolean, Double, Double, Double, Double, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.climate_overlay_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setClimateOverlayId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.climate_overlay_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getClimateOverlayId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.climate_id</code>. Primary
     * id for this table. This uniquely identifies the row.
     */
    public void setClimateId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.climate_id</code>. Primary
     * id for this table. This uniquely identifies the row.
     */
    public Integer getClimateId() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.climate_name</code>.
     * Describes the climate.
     */
    public void setClimateName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.climate_name</code>.
     * Describes the climate.
     */
    public String getClimateName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.is_legend</code>. The
     * legend for the image. What colours represent in the overlays. This is not
     * required but used if present. 
     */
    public void setIsLegend(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.is_legend</code>. The
     * legend for the image. What colours represent in the overlays. This is not
     * required but used if present. 
     */
    public Boolean getIsLegend() {
        return (Boolean) get(3);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.bottom_left_latitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public void setBottomLeftLatitude(Double value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.bottom_left_latitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public Double getBottomLeftLatitude() {
        return (Double) get(4);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.bottom_left_longitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public void setBottomLeftLongitude(Double value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.bottom_left_longitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public Double getBottomLeftLongitude() {
        return (Double) get(5);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.top_right_latitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public void setTopRightLatitude(Double value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.top_right_latitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public Double getTopRightLatitude() {
        return (Double) get(6);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_climateoverlays.top_right_longitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public void setTopRightLongitude(Double value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_climateoverlays.top_right_longitude</code>.
     * Allows the allignment of images against OpenStreetMap API.
     */
    public Double getTopRightLongitude() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>germinate_db.view_table_climateoverlays.filename</code>.
     * This is the path for holding images which can be used as overlays for the
     * Google Maps representation in Germinate. The path is relative.
     */
    public void setFilename(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_climateoverlays.filename</code>.
     * This is the path for holding images which can be used as overlays for the
     * Google Maps representation in Germinate. The path is relative.
     */
    public String getFilename() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, Boolean, Double, Double, Double, Double, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, Boolean, Double, Double, Double, Double, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.CLIMATE_OVERLAY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.CLIMATE_ID;
    }

    @Override
    public Field<String> field3() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.CLIMATE_NAME;
    }

    @Override
    public Field<Boolean> field4() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.IS_LEGEND;
    }

    @Override
    public Field<Double> field5() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.BOTTOM_LEFT_LATITUDE;
    }

    @Override
    public Field<Double> field6() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.BOTTOM_LEFT_LONGITUDE;
    }

    @Override
    public Field<Double> field7() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.TOP_RIGHT_LATITUDE;
    }

    @Override
    public Field<Double> field8() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.TOP_RIGHT_LONGITUDE;
    }

    @Override
    public Field<String> field9() {
        return ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS.FILENAME;
    }

    @Override
    public Integer component1() {
        return getClimateOverlayId();
    }

    @Override
    public Integer component2() {
        return getClimateId();
    }

    @Override
    public String component3() {
        return getClimateName();
    }

    @Override
    public Boolean component4() {
        return getIsLegend();
    }

    @Override
    public Double component5() {
        return getBottomLeftLatitude();
    }

    @Override
    public Double component6() {
        return getBottomLeftLongitude();
    }

    @Override
    public Double component7() {
        return getTopRightLatitude();
    }

    @Override
    public Double component8() {
        return getTopRightLongitude();
    }

    @Override
    public String component9() {
        return getFilename();
    }

    @Override
    public Integer value1() {
        return getClimateOverlayId();
    }

    @Override
    public Integer value2() {
        return getClimateId();
    }

    @Override
    public String value3() {
        return getClimateName();
    }

    @Override
    public Boolean value4() {
        return getIsLegend();
    }

    @Override
    public Double value5() {
        return getBottomLeftLatitude();
    }

    @Override
    public Double value6() {
        return getBottomLeftLongitude();
    }

    @Override
    public Double value7() {
        return getTopRightLatitude();
    }

    @Override
    public Double value8() {
        return getTopRightLongitude();
    }

    @Override
    public String value9() {
        return getFilename();
    }

    @Override
    public ViewTableClimateoverlaysRecord value1(Integer value) {
        setClimateOverlayId(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value2(Integer value) {
        setClimateId(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value3(String value) {
        setClimateName(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value4(Boolean value) {
        setIsLegend(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value5(Double value) {
        setBottomLeftLatitude(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value6(Double value) {
        setBottomLeftLongitude(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value7(Double value) {
        setTopRightLatitude(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value8(Double value) {
        setTopRightLongitude(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord value9(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public ViewTableClimateoverlaysRecord values(Integer value1, Integer value2, String value3, Boolean value4, Double value5, Double value6, Double value7, Double value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTableClimateoverlaysRecord
     */
    public ViewTableClimateoverlaysRecord() {
        super(ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS);
    }

    /**
     * Create a detached, initialised ViewTableClimateoverlaysRecord
     */
    public ViewTableClimateoverlaysRecord(Integer climateOverlayId, Integer climateId, String climateName, Boolean isLegend, Double bottomLeftLatitude, Double bottomLeftLongitude, Double topRightLatitude, Double topRightLongitude, String filename) {
        super(ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS);

        setClimateOverlayId(climateOverlayId);
        setClimateId(climateId);
        setClimateName(climateName);
        setIsLegend(isLegend);
        setBottomLeftLatitude(bottomLeftLatitude);
        setBottomLeftLongitude(bottomLeftLongitude);
        setTopRightLatitude(topRightLatitude);
        setTopRightLongitude(topRightLongitude);
        setFilename(filename);
    }

    /**
     * Create a detached, initialised ViewTableClimateoverlaysRecord
     */
    public ViewTableClimateoverlaysRecord(jhi.germinate.server.database.codegen.tables.pojos.ViewTableClimateoverlays value) {
        super(ViewTableClimateoverlays.VIEW_TABLE_CLIMATEOVERLAYS);

        if (value != null) {
            setClimateOverlayId(value.getClimateOverlayId());
            setClimateId(value.getClimateId());
            setClimateName(value.getClimateName());
            setIsLegend(value.getIsLegend());
            setBottomLeftLatitude(value.getBottomLeftLatitude());
            setBottomLeftLongitude(value.getBottomLeftLongitude());
            setTopRightLatitude(value.getTopRightLatitude());
            setTopRightLongitude(value.getTopRightLongitude());
            setFilename(value.getFilename());
        }
    }
    // @formatter:on
}
