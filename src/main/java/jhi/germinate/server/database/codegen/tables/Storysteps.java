/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;

import jhi.germinate.server.database.binding.StoryStepConfigBinding;
import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.tables.records.StorystepsRecord;
import jhi.germinate.server.database.pojo.StoryStepConfig;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Storysteps extends TableImpl<StorystepsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>germinate_db.storysteps</code>
     */
    public static final Storysteps STORYSTEPS = new Storysteps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StorystepsRecord> getRecordType() {
        return StorystepsRecord.class;
    }

    /**
     * The column <code>germinate_db.storysteps.id</code>.
     */
    public final TableField<StorystepsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>germinate_db.storysteps.story_id</code>.
     */
    public final TableField<StorystepsRecord, Integer> STORY_ID = createField(DSL.name("story_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>germinate_db.storysteps.story_index</code>.
     */
    public final TableField<StorystepsRecord, Integer> STORY_INDEX = createField(DSL.name("story_index"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>germinate_db.storysteps.page_config</code>.
     */
    public final TableField<StorystepsRecord, StoryStepConfig> PAGE_CONFIG = createField(DSL.name("page_config"), SQLDataType.JSON.nullable(false), this, "", new StoryStepConfigBinding());

    /**
     * The column <code>germinate_db.storysteps.name</code>.
     */
    public final TableField<StorystepsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>germinate_db.storysteps.description</code>.
     */
    public final TableField<StorystepsRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>germinate_db.storysteps.image_id</code>.
     */
    public final TableField<StorystepsRecord, Integer> IMAGE_ID = createField(DSL.name("image_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>germinate_db.storysteps.created_on</code>.
     */
    public final TableField<StorystepsRecord, Timestamp> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>germinate_db.storysteps.updated_on</code>.
     */
    public final TableField<StorystepsRecord, Timestamp> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private Storysteps(Name alias, Table<StorystepsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Storysteps(Name alias, Table<StorystepsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>germinate_db.storysteps</code> table reference
     */
    public Storysteps(String alias) {
        this(DSL.name(alias), STORYSTEPS);
    }

    /**
     * Create an aliased <code>germinate_db.storysteps</code> table reference
     */
    public Storysteps(Name alias) {
        this(alias, STORYSTEPS);
    }

    /**
     * Create a <code>germinate_db.storysteps</code> table reference
     */
    public Storysteps() {
        this(DSL.name("storysteps"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : GerminateDb.GERMINATE_DB;
    }

    @Override
    public Identity<StorystepsRecord, Integer> getIdentity() {
        return (Identity<StorystepsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<StorystepsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(Storysteps.STORYSTEPS, DSL.name("KEY_storysteps_PRIMARY"), new TableField[] { Storysteps.STORYSTEPS.ID }, true);
    }

    @Override
    public Storysteps as(String alias) {
        return new Storysteps(DSL.name(alias), this);
    }

    @Override
    public Storysteps as(Name alias) {
        return new Storysteps(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Storysteps rename(String name) {
        return new Storysteps(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Storysteps rename(Name name) {
        return new Storysteps(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, Integer, StoryStepConfig, String, String, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
    // @formatter:on
}
