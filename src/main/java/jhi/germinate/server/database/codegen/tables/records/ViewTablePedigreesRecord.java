/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import jhi.germinate.server.database.codegen.enums.ViewTablePedigreesRelationshipType;
import jhi.germinate.server.database.codegen.tables.ViewTablePedigrees;

import org.jooq.Field;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTablePedigreesRecord extends TableRecordImpl<ViewTablePedigreesRecord> implements Record18<Integer, String, String, String, String, Integer, String, String, String, String, Integer, String, Integer, String, ViewTablePedigreesRelationshipType, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.parent_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setParentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.parent_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getParentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.parent_gid</code>. A
     * unique identifier.
     */
    public void setParentGid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.parent_gid</code>. A
     * unique identifier.
     */
    public String getParentGid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.parent_name</code>. A
     * unique name which defines an entry in the germinatbase table.
     */
    public void setParentName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.parent_name</code>. A
     * unique name which defines an entry in the germinatbase table.
     */
    public String getParentName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.parent_display_name</code>. The
     * name to be displayed on user interfaces and to be exported to external
     * tools like Flapjack and Helium.
     */
    public void setParentDisplayName(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.parent_display_name</code>. The
     * name to be displayed on user interfaces and to be exported to external
     * tools like Flapjack and Helium.
     */
    public String getParentDisplayName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.parent_number</code>.
     * This is the unique identifier for accessions within a genebank, and is
     * assigned when a sample is
     * entered into the genebank collection (e.g. ‘PI 113869’).
     */
    public void setParentNumber(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.parent_number</code>.
     * This is the unique identifier for accessions within a genebank, and is
     * assigned when a sample is
     * entered into the genebank collection (e.g. ‘PI 113869’).
     */
    public String getParentNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.child_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setChildId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.child_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getChildId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.child_gid</code>. A
     * unique identifier.
     */
    public void setChildGid(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.child_gid</code>. A
     * unique identifier.
     */
    public String getChildGid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.child_name</code>. A
     * unique name which defines an entry in the germinatbase table.
     */
    public void setChildName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.child_name</code>. A
     * unique name which defines an entry in the germinatbase table.
     */
    public String getChildName() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.child_display_name</code>. The
     * name to be displayed on user interfaces and to be exported to external
     * tools like Flapjack and Helium.
     */
    public void setChildDisplayName(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.child_display_name</code>. The
     * name to be displayed on user interfaces and to be exported to external
     * tools like Flapjack and Helium.
     */
    public String getChildDisplayName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.child_number</code>.
     * This is the unique identifier for accessions within a genebank, and is
     * assigned when a sample is
     * entered into the genebank collection (e.g. ‘PI 113869’).
     */
    public void setChildNumber(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.child_number</code>.
     * This is the unique identifier for accessions within a genebank, and is
     * assigned when a sample is
     * entered into the genebank collection (e.g. ‘PI 113869’).
     */
    public String getChildNumber() {
        return (String) get(9);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setDatasetId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getDatasetId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.dataset_name</code>.
     * Describes the dataset.
     */
    public void setDatasetName(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.dataset_name</code>.
     * Describes the dataset.
     */
    public String getDatasetName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>germinate_db.view_table_pedigrees.experiment_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setExperimentId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_pedigrees.experiment_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getExperimentId() {
        return (Integer) get(12);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.experiment_name</code>. The name
     * of the experiment.
     */
    public void setExperimentName(String value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.experiment_name</code>. The name
     * of the experiment.
     */
    public String getExperimentName() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.relationship_type</code>. Male or
     * Female parent. Should be recorded as 'M' (male) or 'F' (female).
     */
    public void setRelationshipType(ViewTablePedigreesRelationshipType value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.relationship_type</code>. Male or
     * Female parent. Should be recorded as 'M' (male) or 'F' (female).
     */
    public ViewTablePedigreesRelationshipType getRelationshipType() {
        return (ViewTablePedigreesRelationshipType) get(14);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.relationship_description</code>.
     * Can be used as a meta-data field to describe the relationships if a
     * complex rellationship is required. Examples may include, 'is a complex
     * cross containing', 'F4 generation' and so on. This is used by the Helium
     * pedigree visualiztion tool.
     */
    public void setRelationshipDescription(String value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.relationship_description</code>.
     * Can be used as a meta-data field to describe the relationships if a
     * complex rellationship is required. Examples may include, 'is a complex
     * cross containing', 'F4 generation' and so on. This is used by the Helium
     * pedigree visualiztion tool.
     */
    public String getRelationshipDescription() {
        return (String) get(15);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.pedigree_description</code>. The
     * name of the pedigree.
     */
    public void setPedigreeDescription(String value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.pedigree_description</code>. The
     * name of the pedigree.
     */
    public String getPedigreeDescription() {
        return (String) get(16);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_pedigrees.pedigree_author</code>. Who is
     * responsible for the creation of the pedigree. Attribution should be
     * included in here for pedigree sources.
     */
    public void setPedigreeAuthor(String value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_pedigrees.pedigree_author</code>. Who is
     * responsible for the creation of the pedigree. Attribution should be
     * included in here for pedigree sources.
     */
    public String getPedigreeAuthor() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, String, String, String, String, Integer, String, String, String, String, Integer, String, Integer, String, ViewTablePedigreesRelationshipType, String, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Integer, String, String, String, String, Integer, String, String, String, String, Integer, String, Integer, String, ViewTablePedigreesRelationshipType, String, String, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PARENT_ID;
    }

    @Override
    public Field<String> field2() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PARENT_GID;
    }

    @Override
    public Field<String> field3() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PARENT_NAME;
    }

    @Override
    public Field<String> field4() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PARENT_DISPLAY_NAME;
    }

    @Override
    public Field<String> field5() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PARENT_NUMBER;
    }

    @Override
    public Field<Integer> field6() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.CHILD_ID;
    }

    @Override
    public Field<String> field7() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.CHILD_GID;
    }

    @Override
    public Field<String> field8() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.CHILD_NAME;
    }

    @Override
    public Field<String> field9() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.CHILD_DISPLAY_NAME;
    }

    @Override
    public Field<String> field10() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.CHILD_NUMBER;
    }

    @Override
    public Field<Integer> field11() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.DATASET_ID;
    }

    @Override
    public Field<String> field12() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.DATASET_NAME;
    }

    @Override
    public Field<Integer> field13() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.EXPERIMENT_ID;
    }

    @Override
    public Field<String> field14() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.EXPERIMENT_NAME;
    }

    @Override
    public Field<ViewTablePedigreesRelationshipType> field15() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.RELATIONSHIP_TYPE;
    }

    @Override
    public Field<String> field16() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.RELATIONSHIP_DESCRIPTION;
    }

    @Override
    public Field<String> field17() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PEDIGREE_DESCRIPTION;
    }

    @Override
    public Field<String> field18() {
        return ViewTablePedigrees.VIEW_TABLE_PEDIGREES.PEDIGREE_AUTHOR;
    }

    @Override
    public Integer component1() {
        return getParentId();
    }

    @Override
    public String component2() {
        return getParentGid();
    }

    @Override
    public String component3() {
        return getParentName();
    }

    @Override
    public String component4() {
        return getParentDisplayName();
    }

    @Override
    public String component5() {
        return getParentNumber();
    }

    @Override
    public Integer component6() {
        return getChildId();
    }

    @Override
    public String component7() {
        return getChildGid();
    }

    @Override
    public String component8() {
        return getChildName();
    }

    @Override
    public String component9() {
        return getChildDisplayName();
    }

    @Override
    public String component10() {
        return getChildNumber();
    }

    @Override
    public Integer component11() {
        return getDatasetId();
    }

    @Override
    public String component12() {
        return getDatasetName();
    }

    @Override
    public Integer component13() {
        return getExperimentId();
    }

    @Override
    public String component14() {
        return getExperimentName();
    }

    @Override
    public ViewTablePedigreesRelationshipType component15() {
        return getRelationshipType();
    }

    @Override
    public String component16() {
        return getRelationshipDescription();
    }

    @Override
    public String component17() {
        return getPedigreeDescription();
    }

    @Override
    public String component18() {
        return getPedigreeAuthor();
    }

    @Override
    public Integer value1() {
        return getParentId();
    }

    @Override
    public String value2() {
        return getParentGid();
    }

    @Override
    public String value3() {
        return getParentName();
    }

    @Override
    public String value4() {
        return getParentDisplayName();
    }

    @Override
    public String value5() {
        return getParentNumber();
    }

    @Override
    public Integer value6() {
        return getChildId();
    }

    @Override
    public String value7() {
        return getChildGid();
    }

    @Override
    public String value8() {
        return getChildName();
    }

    @Override
    public String value9() {
        return getChildDisplayName();
    }

    @Override
    public String value10() {
        return getChildNumber();
    }

    @Override
    public Integer value11() {
        return getDatasetId();
    }

    @Override
    public String value12() {
        return getDatasetName();
    }

    @Override
    public Integer value13() {
        return getExperimentId();
    }

    @Override
    public String value14() {
        return getExperimentName();
    }

    @Override
    public ViewTablePedigreesRelationshipType value15() {
        return getRelationshipType();
    }

    @Override
    public String value16() {
        return getRelationshipDescription();
    }

    @Override
    public String value17() {
        return getPedigreeDescription();
    }

    @Override
    public String value18() {
        return getPedigreeAuthor();
    }

    @Override
    public ViewTablePedigreesRecord value1(Integer value) {
        setParentId(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value2(String value) {
        setParentGid(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value3(String value) {
        setParentName(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value4(String value) {
        setParentDisplayName(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value5(String value) {
        setParentNumber(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value6(Integer value) {
        setChildId(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value7(String value) {
        setChildGid(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value8(String value) {
        setChildName(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value9(String value) {
        setChildDisplayName(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value10(String value) {
        setChildNumber(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value11(Integer value) {
        setDatasetId(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value12(String value) {
        setDatasetName(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value13(Integer value) {
        setExperimentId(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value14(String value) {
        setExperimentName(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value15(ViewTablePedigreesRelationshipType value) {
        setRelationshipType(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value16(String value) {
        setRelationshipDescription(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value17(String value) {
        setPedigreeDescription(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord value18(String value) {
        setPedigreeAuthor(value);
        return this;
    }

    @Override
    public ViewTablePedigreesRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7, String value8, String value9, String value10, Integer value11, String value12, Integer value13, String value14, ViewTablePedigreesRelationshipType value15, String value16, String value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTablePedigreesRecord
     */
    public ViewTablePedigreesRecord() {
        super(ViewTablePedigrees.VIEW_TABLE_PEDIGREES);
    }

    /**
     * Create a detached, initialised ViewTablePedigreesRecord
     */
    public ViewTablePedigreesRecord(Integer parentId, String parentGid, String parentName, String parentDisplayName, String parentNumber, Integer childId, String childGid, String childName, String childDisplayName, String childNumber, Integer datasetId, String datasetName, Integer experimentId, String experimentName, ViewTablePedigreesRelationshipType relationshipType, String relationshipDescription, String pedigreeDescription, String pedigreeAuthor) {
        super(ViewTablePedigrees.VIEW_TABLE_PEDIGREES);

        setParentId(parentId);
        setParentGid(parentGid);
        setParentName(parentName);
        setParentDisplayName(parentDisplayName);
        setParentNumber(parentNumber);
        setChildId(childId);
        setChildGid(childGid);
        setChildName(childName);
        setChildDisplayName(childDisplayName);
        setChildNumber(childNumber);
        setDatasetId(datasetId);
        setDatasetName(datasetName);
        setExperimentId(experimentId);
        setExperimentName(experimentName);
        setRelationshipType(relationshipType);
        setRelationshipDescription(relationshipDescription);
        setPedigreeDescription(pedigreeDescription);
        setPedigreeAuthor(pedigreeAuthor);
    }

    /**
     * Create a detached, initialised ViewTablePedigreesRecord
     */
    public ViewTablePedigreesRecord(jhi.germinate.server.database.codegen.tables.pojos.ViewTablePedigrees value) {
        super(ViewTablePedigrees.VIEW_TABLE_PEDIGREES);

        if (value != null) {
            setParentId(value.getParentId());
            setParentGid(value.getParentGid());
            setParentName(value.getParentName());
            setParentDisplayName(value.getParentDisplayName());
            setParentNumber(value.getParentNumber());
            setChildId(value.getChildId());
            setChildGid(value.getChildGid());
            setChildName(value.getChildName());
            setChildDisplayName(value.getChildDisplayName());
            setChildNumber(value.getChildNumber());
            setDatasetId(value.getDatasetId());
            setDatasetName(value.getDatasetName());
            setExperimentId(value.getExperimentId());
            setExperimentName(value.getExperimentName());
            setRelationshipType(value.getRelationshipType());
            setRelationshipDescription(value.getRelationshipDescription());
            setPedigreeDescription(value.getPedigreeDescription());
            setPedigreeAuthor(value.getPedigreeAuthor());
        }
    }
    // @formatter:on
}
