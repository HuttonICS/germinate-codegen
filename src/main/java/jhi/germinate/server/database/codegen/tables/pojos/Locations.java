/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * Describes locations. Locations can be collecting sites or the location of any
 * geographical feature such as research institutes or lab locations.
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Locations implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer    id;
    private Integer    locationtypeId;
    private Integer    countryId;
    private String     state;
    private String     region;
    private String     siteName;
    private String     siteNameShort;
    private BigDecimal elevation;
    private BigDecimal latitude;
    private BigDecimal longitude;
    private Integer    coordinateUncertainty;
    private String     coordinateDatum;
    private String     georeferencingMethod;
    private Timestamp  createdOn;
    private Timestamp  updatedOn;

    public Locations() {}

    public Locations(Locations value) {
        this.id = value.id;
        this.locationtypeId = value.locationtypeId;
        this.countryId = value.countryId;
        this.state = value.state;
        this.region = value.region;
        this.siteName = value.siteName;
        this.siteNameShort = value.siteNameShort;
        this.elevation = value.elevation;
        this.latitude = value.latitude;
        this.longitude = value.longitude;
        this.coordinateUncertainty = value.coordinateUncertainty;
        this.coordinateDatum = value.coordinateDatum;
        this.georeferencingMethod = value.georeferencingMethod;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Locations(
        Integer    id,
        Integer    locationtypeId,
        Integer    countryId,
        String     state,
        String     region,
        String     siteName,
        String     siteNameShort,
        BigDecimal elevation,
        BigDecimal latitude,
        BigDecimal longitude,
        Integer    coordinateUncertainty,
        String     coordinateDatum,
        String     georeferencingMethod,
        Timestamp  createdOn,
        Timestamp  updatedOn
    ) {
        this.id = id;
        this.locationtypeId = locationtypeId;
        this.countryId = countryId;
        this.state = state;
        this.region = region;
        this.siteName = siteName;
        this.siteNameShort = siteNameShort;
        this.elevation = elevation;
        this.latitude = latitude;
        this.longitude = longitude;
        this.coordinateUncertainty = coordinateUncertainty;
        this.coordinateDatum = coordinateDatum;
        this.georeferencingMethod = georeferencingMethod;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Locations (");

        sb.append(id);
        sb.append(", ").append(locationtypeId);
        sb.append(", ").append(countryId);
        sb.append(", ").append(state);
        sb.append(", ").append(region);
        sb.append(", ").append(siteName);
        sb.append(", ").append(siteNameShort);
        sb.append(", ").append(elevation);
        sb.append(", ").append(latitude);
        sb.append(", ").append(longitude);
        sb.append(", ").append(coordinateUncertainty);
        sb.append(", ").append(coordinateDatum);
        sb.append(", ").append(georeferencingMethod);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
