/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.tables.records.ViewTablePedigreedefinitionsRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTablePedigreedefinitions extends TableImpl<ViewTablePedigreedefinitionsRecord> {

    private static final long serialVersionUID = 701302541;

    /**
     * The reference instance of <code>germinate_db.view_table_pedigreedefinitions</code>
     */
    public static final ViewTablePedigreedefinitions VIEW_TABLE_PEDIGREEDEFINITIONS = new ViewTablePedigreedefinitions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewTablePedigreedefinitionsRecord> getRecordType() {
        return ViewTablePedigreedefinitionsRecord.class;
    }

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.germplasm_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, Integer> GERMPLASM_ID = createField("germplasm_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.germplasm_name</code>. A unique name which defines an entry in the germinatbase table.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> GERMPLASM_NAME = createField("germplasm_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "A unique name which defines an entry in the germinatbase table.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.pedigree_notation_name</code>. Name of the reference notation source.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> PEDIGREE_NOTATION_NAME = createField("pedigree_notation_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "Name of the reference notation source.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.pedigree_notation_description</code>. A longer description about the reference notation source.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> PEDIGREE_NOTATION_DESCRIPTION = createField("pedigree_notation_description", org.jooq.impl.SQLDataType.CLOB, this, "A longer description about the reference notation source.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.pedigree_notation_url</code>. Hyperlink to the notation source.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> PEDIGREE_NOTATION_URL = createField("pedigree_notation_url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "Hyperlink to the notation source.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.dataset_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, Integer> DATASET_ID = createField("dataset_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.dataset_name</code>. Describes the dataset.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> DATASET_NAME = createField("dataset_name", org.jooq.impl.SQLDataType.CLOB, this, "Describes the dataset.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.definition_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, Integer> DEFINITION_ID = createField("definition_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.definition</code>. The pedigree string which is used to represent the germinatebase entry.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> DEFINITION = createField("definition", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "The pedigree string which is used to represent the germinatebase entry.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.pedigree_description_name</code>. The name of the pedigree.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> PEDIGREE_DESCRIPTION_NAME = createField("pedigree_description_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The name of the pedigree.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.pedigree_description_description</code>. Describes the pedigree in more detail.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> PEDIGREE_DESCRIPTION_DESCRIPTION = createField("pedigree_description_description", org.jooq.impl.SQLDataType.CLOB, this, "Describes the pedigree in more detail.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.pedigree_description_author</code>. Who is responsible for the creation of the pedigree. Attribution should be included in here for pedigree sources.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, String> PEDIGREE_DESCRIPTION_AUTHOR = createField("pedigree_description_author", org.jooq.impl.SQLDataType.VARCHAR(255), this, "Who is responsible for the creation of the pedigree. Attribution should be included in here for pedigree sources.");

    /**
     * The column <code>germinate_db.view_table_pedigreedefinitions.created_on</code>. When the record was created.
     */
    public final TableField<ViewTablePedigreedefinitionsRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP, this, "When the record was created.");

    /**
     * Create a <code>germinate_db.view_table_pedigreedefinitions</code> table reference
     */
    public ViewTablePedigreedefinitions() {
        this(DSL.name("view_table_pedigreedefinitions"), null);
    }

    /**
     * Create an aliased <code>germinate_db.view_table_pedigreedefinitions</code> table reference
     */
    public ViewTablePedigreedefinitions(String alias) {
        this(DSL.name(alias), VIEW_TABLE_PEDIGREEDEFINITIONS);
    }

    /**
     * Create an aliased <code>germinate_db.view_table_pedigreedefinitions</code> table reference
     */
    public ViewTablePedigreedefinitions(Name alias) {
        this(alias, VIEW_TABLE_PEDIGREEDEFINITIONS);
    }

    private ViewTablePedigreedefinitions(Name alias, Table<ViewTablePedigreedefinitionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewTablePedigreedefinitions(Name alias, Table<ViewTablePedigreedefinitionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateDb.GERMINATE_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTablePedigreedefinitions as(String alias) {
        return new ViewTablePedigreedefinitions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTablePedigreedefinitions as(Name alias) {
        return new ViewTablePedigreedefinitions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTablePedigreedefinitions rename(String name) {
        return new ViewTablePedigreedefinitions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTablePedigreedefinitions rename(Name name) {
        return new ViewTablePedigreedefinitions(name, null);
    }
// @formatter:on
}
