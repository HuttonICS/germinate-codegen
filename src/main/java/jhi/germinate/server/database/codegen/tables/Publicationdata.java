/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.enums.PublicationdataReferenceType;
import jhi.germinate.server.database.codegen.tables.records.PublicationdataRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Publicationdata extends TableImpl<PublicationdataRecord> {

    private static final long serialVersionUID = 494390491;

    /**
     * The reference instance of <code>germinate_db.publicationdata</code>
     */
    public static final Publicationdata PUBLICATIONDATA = new Publicationdata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PublicationdataRecord> getRecordType() {
        return PublicationdataRecord.class;
    }

    /**
     * The column <code>germinate_db.publicationdata.id</code>.
     */
    public final TableField<PublicationdataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>germinate_db.publicationdata.foreign_id</code>.
     */
    public final TableField<PublicationdataRecord, Integer> FOREIGN_ID = createField("foreign_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>germinate_db.publicationdata.publication_id</code>.
     */
    public final TableField<PublicationdataRecord, Integer> PUBLICATION_ID = createField("publication_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>germinate_db.publicationdata.reference_type</code>.
     */
    public final TableField<PublicationdataRecord, PublicationdataReferenceType> REFERENCE_TYPE = createField("reference_type", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("database", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(jhi.germinate.server.database.codegen.enums.PublicationdataReferenceType.class), this, "");

    /**
     * The column <code>germinate_db.publicationdata.created_on</code>.
     */
    public final TableField<PublicationdataRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>germinate_db.publicationdata.updated_on</code>.
     */
    public final TableField<PublicationdataRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>germinate_db.publicationdata</code> table reference
     */
    public Publicationdata() {
        this(DSL.name("publicationdata"), null);
    }

    /**
     * Create an aliased <code>germinate_db.publicationdata</code> table reference
     */
    public Publicationdata(String alias) {
        this(DSL.name(alias), PUBLICATIONDATA);
    }

    /**
     * Create an aliased <code>germinate_db.publicationdata</code> table reference
     */
    public Publicationdata(Name alias) {
        this(alias, PUBLICATIONDATA);
    }

    private Publicationdata(Name alias, Table<PublicationdataRecord> aliased) {
        this(alias, aliased, null);
    }

    private Publicationdata(Name alias, Table<PublicationdataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateDb.GERMINATE_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PublicationdataRecord, Integer> getIdentity() {
        return Internal.createIdentity(jhi.germinate.server.database.codegen.tables.Publicationdata.PUBLICATIONDATA, jhi.germinate.server.database.codegen.tables.Publicationdata.PUBLICATIONDATA.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PublicationdataRecord> getPrimaryKey() {
        return Internal.createUniqueKey(jhi.germinate.server.database.codegen.tables.Publicationdata.PUBLICATIONDATA, "KEY_publicationdata_PRIMARY", jhi.germinate.server.database.codegen.tables.Publicationdata.PUBLICATIONDATA.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PublicationdataRecord>> getKeys() {
        return Arrays.<UniqueKey<PublicationdataRecord>>asList(
              Internal.createUniqueKey(jhi.germinate.server.database.codegen.tables.Publicationdata.PUBLICATIONDATA, "KEY_publicationdata_PRIMARY", jhi.germinate.server.database.codegen.tables.Publicationdata.PUBLICATIONDATA.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Publicationdata as(String alias) {
        return new Publicationdata(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Publicationdata as(Name alias) {
        return new Publicationdata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Publicationdata rename(String name) {
        return new Publicationdata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Publicationdata rename(Name name) {
        return new Publicationdata(name, null);
    }
// @formatter:on
}
