/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.enums.ViewTableMapoverlaysReferenceTable;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableMapoverlays implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                            mapoverlayId;
    private String                             mapoverlayName;
    private String                             mapoverlayDescription;
    private BigDecimal                         mapoverlayBottomLeftLat;
    private BigDecimal                         mapoverlayBottomLeftLng;
    private Object                             mapoverlayTopRightLat;
    private Object                             mapoverlayTopRightLng;
    private Boolean                            mapoverlaysIsLegend;
    private ViewTableMapoverlaysReferenceTable referenceTable;
    private Integer                            foreignId;
    private Integer                            datasetId;
    private String                             datasetName;
    private String                             datasetDescription;
    private String                             datasetType;
    private Timestamp                          recordingDate;
    private Timestamp                          createdOn;
    private Timestamp                          updatedOn;

    public ViewTableMapoverlays() {}

    public ViewTableMapoverlays(ViewTableMapoverlays value) {
        this.mapoverlayId = value.mapoverlayId;
        this.mapoverlayName = value.mapoverlayName;
        this.mapoverlayDescription = value.mapoverlayDescription;
        this.mapoverlayBottomLeftLat = value.mapoverlayBottomLeftLat;
        this.mapoverlayBottomLeftLng = value.mapoverlayBottomLeftLng;
        this.mapoverlayTopRightLat = value.mapoverlayTopRightLat;
        this.mapoverlayTopRightLng = value.mapoverlayTopRightLng;
        this.mapoverlaysIsLegend = value.mapoverlaysIsLegend;
        this.referenceTable = value.referenceTable;
        this.foreignId = value.foreignId;
        this.datasetId = value.datasetId;
        this.datasetName = value.datasetName;
        this.datasetDescription = value.datasetDescription;
        this.datasetType = value.datasetType;
        this.recordingDate = value.recordingDate;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public ViewTableMapoverlays(
        Integer                            mapoverlayId,
        String                             mapoverlayName,
        String                             mapoverlayDescription,
        BigDecimal                         mapoverlayBottomLeftLat,
        BigDecimal                         mapoverlayBottomLeftLng,
        Object                             mapoverlayTopRightLat,
        Object                             mapoverlayTopRightLng,
        Boolean                            mapoverlaysIsLegend,
        ViewTableMapoverlaysReferenceTable referenceTable,
        Integer                            foreignId,
        Integer                            datasetId,
        String                             datasetName,
        String                             datasetDescription,
        String                             datasetType,
        Timestamp                          recordingDate,
        Timestamp                          createdOn,
        Timestamp                          updatedOn
    ) {
        this.mapoverlayId = mapoverlayId;
        this.mapoverlayName = mapoverlayName;
        this.mapoverlayDescription = mapoverlayDescription;
        this.mapoverlayBottomLeftLat = mapoverlayBottomLeftLat;
        this.mapoverlayBottomLeftLng = mapoverlayBottomLeftLng;
        this.mapoverlayTopRightLat = mapoverlayTopRightLat;
        this.mapoverlayTopRightLng = mapoverlayTopRightLng;
        this.mapoverlaysIsLegend = mapoverlaysIsLegend;
        this.referenceTable = referenceTable;
        this.foreignId = foreignId;
        this.datasetId = datasetId;
        this.datasetName = datasetName;
        this.datasetDescription = datasetDescription;
        this.datasetType = datasetType;
        this.recordingDate = recordingDate;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_id</code>. The
     * primary key of this table.
     */
    public Integer getMapoverlayId() {
        return this.mapoverlayId;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_id</code>. The
     * primary key of this table.
     */
    public void setMapoverlayId(Integer mapoverlayId) {
        this.mapoverlayId = mapoverlayId;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_name</code>. A name
     * for the map overlay.
     */
    public String getMapoverlayName() {
        return this.mapoverlayName;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_name</code>. A name
     * for the map overlay.
     */
    public void setMapoverlayName(String mapoverlayName) {
        this.mapoverlayName = mapoverlayName;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_description</code>.
     * An optional description of what is shown on the overlay.
     */
    public String getMapoverlayDescription() {
        return this.mapoverlayDescription;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_description</code>.
     * An optional description of what is shown on the overlay.
     */
    public void setMapoverlayDescription(String mapoverlayDescription) {
        this.mapoverlayDescription = mapoverlayDescription;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lat</code>.
     * The bottom left latitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public BigDecimal getMapoverlayBottomLeftLat() {
        return this.mapoverlayBottomLeftLat;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lat</code>.
     * The bottom left latitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public void setMapoverlayBottomLeftLat(BigDecimal mapoverlayBottomLeftLat) {
        this.mapoverlayBottomLeftLat = mapoverlayBottomLeftLat;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lng</code>.
     * The bottom left longitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public BigDecimal getMapoverlayBottomLeftLng() {
        return this.mapoverlayBottomLeftLng;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlay_bottom_left_lng</code>.
     * The bottom left longitude coordinates in decimal degrees for anchoring on
     * the map.
     */
    public void setMapoverlayBottomLeftLng(BigDecimal mapoverlayBottomLeftLng) {
        this.mapoverlayBottomLeftLng = mapoverlayBottomLeftLng;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getMapoverlayTopRightLat() {
        return this.mapoverlayTopRightLat;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setMapoverlayTopRightLat(Object mapoverlayTopRightLat) {
        this.mapoverlayTopRightLat = mapoverlayTopRightLat;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getMapoverlayTopRightLng() {
        return this.mapoverlayTopRightLng;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setMapoverlayTopRightLng(Object mapoverlayTopRightLng) {
        this.mapoverlayTopRightLng = mapoverlayTopRightLng;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlays_is_legend</code>.
     * Flag to indicate whether this is a legend or an actual overlay.
     */
    public Boolean getMapoverlaysIsLegend() {
        return this.mapoverlaysIsLegend;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.mapoverlays_is_legend</code>.
     * Flag to indicate whether this is a legend or an actual overlay.
     */
    public void setMapoverlaysIsLegend(Boolean mapoverlaysIsLegend) {
        this.mapoverlaysIsLegend = mapoverlaysIsLegend;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.reference_table</code>.
     * Optionally, other database items can be linked to this. As an example, an
     * overlay can be linked to a climate variable.
     */
    public ViewTableMapoverlaysReferenceTable getReferenceTable() {
        return this.referenceTable;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.reference_table</code>.
     * Optionally, other database items can be linked to this. As an example, an
     * overlay can be linked to a climate variable.
     */
    public void setReferenceTable(ViewTableMapoverlaysReferenceTable referenceTable) {
        this.referenceTable = referenceTable;
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.foreign_id</code>.
     * The foreign id within the reference_table of the linked database object.
     */
    public Integer getForeignId() {
        return this.foreignId;
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.foreign_id</code>.
     * The foreign id within the reference_table of the linked database object.
     */
    public void setForeignId(Integer foreignId) {
        this.foreignId = foreignId;
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getDatasetId() {
        return this.datasetId;
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setDatasetId(Integer datasetId) {
        this.datasetId = datasetId;
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.dataset_name</code>.
     * Describes the dataset.
     */
    public String getDatasetName() {
        return this.datasetName;
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.dataset_name</code>.
     * Describes the dataset.
     */
    public void setDatasetName(String datasetName) {
        this.datasetName = datasetName;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.dataset_description</code>. The
     * name of this dataset.
     */
    public String getDatasetDescription() {
        return this.datasetDescription;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.dataset_description</code>. The
     * name of this dataset.
     */
    public void setDatasetDescription(String datasetDescription) {
        this.datasetDescription = datasetDescription;
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.dataset_type</code>.
     * Describes the experiment type.
     */
    public String getDatasetType() {
        return this.datasetType;
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.dataset_type</code>.
     * Describes the experiment type.
     */
    public void setDatasetType(String datasetType) {
        this.datasetType = datasetType;
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_mapoverlays.recording_date</code>. A date
     * that is associated with the timepoint when this has been recorded.
     */
    public Timestamp getRecordingDate() {
        return this.recordingDate;
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_mapoverlays.recording_date</code>. A date
     * that is associated with the timepoint when this has been recorded.
     */
    public void setRecordingDate(Timestamp recordingDate) {
        this.recordingDate = recordingDate;
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.created_on</code>.
     * The datetime when this database record has been created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.created_on</code>.
     * The datetime when this database record has been created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>germinate_db.view_table_mapoverlays.updated_on</code>.
     * The timestamp when this database record has last been updated.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>germinate_db.view_table_mapoverlays.updated_on</code>.
     * The timestamp when this database record has last been updated.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableMapoverlays (");

        sb.append(mapoverlayId);
        sb.append(", ").append(mapoverlayName);
        sb.append(", ").append(mapoverlayDescription);
        sb.append(", ").append(mapoverlayBottomLeftLat);
        sb.append(", ").append(mapoverlayBottomLeftLng);
        sb.append(", ").append(mapoverlayTopRightLat);
        sb.append(", ").append(mapoverlayTopRightLng);
        sb.append(", ").append(mapoverlaysIsLegend);
        sb.append(", ").append(referenceTable);
        sb.append(", ").append(foreignId);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(datasetName);
        sb.append(", ").append(datasetDescription);
        sb.append(", ").append(datasetType);
        sb.append(", ").append(recordingDate);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
