/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.enums.ViewTableMapoverlaysReferenceTable;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableMapoverlays implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                            mapoverlayId;
    private String                             mapoverlayName;
    private String                             mapoverlayDescription;
    private BigDecimal                         mapoverlayBottomLeftLat;
    private BigDecimal                         mapoverlayBottomLeftLng;
    private BigDecimal                         mapoverlayTopRightLat;
    private BigDecimal                         mapoverlayTopRightLng;
    private Boolean                            mapoverlaysIsLegend;
    private ViewTableMapoverlaysReferenceTable referenceTable;
    private Integer                            foreignId;
    private Integer                            datasetId;
    private String                             datasetName;
    private String                             datasetDescription;
    private String                             datasetType;
    private Timestamp                          recordingDate;
    private Timestamp                          createdOn;
    private Timestamp                          updatedOn;

    public ViewTableMapoverlays() {}

    public ViewTableMapoverlays(ViewTableMapoverlays value) {
        this.mapoverlayId = value.mapoverlayId;
        this.mapoverlayName = value.mapoverlayName;
        this.mapoverlayDescription = value.mapoverlayDescription;
        this.mapoverlayBottomLeftLat = value.mapoverlayBottomLeftLat;
        this.mapoverlayBottomLeftLng = value.mapoverlayBottomLeftLng;
        this.mapoverlayTopRightLat = value.mapoverlayTopRightLat;
        this.mapoverlayTopRightLng = value.mapoverlayTopRightLng;
        this.mapoverlaysIsLegend = value.mapoverlaysIsLegend;
        this.referenceTable = value.referenceTable;
        this.foreignId = value.foreignId;
        this.datasetId = value.datasetId;
        this.datasetName = value.datasetName;
        this.datasetDescription = value.datasetDescription;
        this.datasetType = value.datasetType;
        this.recordingDate = value.recordingDate;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public ViewTableMapoverlays(
        Integer                            mapoverlayId,
        String                             mapoverlayName,
        String                             mapoverlayDescription,
        BigDecimal                         mapoverlayBottomLeftLat,
        BigDecimal                         mapoverlayBottomLeftLng,
        BigDecimal                         mapoverlayTopRightLat,
        BigDecimal                         mapoverlayTopRightLng,
        Boolean                            mapoverlaysIsLegend,
        ViewTableMapoverlaysReferenceTable referenceTable,
        Integer                            foreignId,
        Integer                            datasetId,
        String                             datasetName,
        String                             datasetDescription,
        String                             datasetType,
        Timestamp                          recordingDate,
        Timestamp                          createdOn,
        Timestamp                          updatedOn
    ) {
        this.mapoverlayId = mapoverlayId;
        this.mapoverlayName = mapoverlayName;
        this.mapoverlayDescription = mapoverlayDescription;
        this.mapoverlayBottomLeftLat = mapoverlayBottomLeftLat;
        this.mapoverlayBottomLeftLng = mapoverlayBottomLeftLng;
        this.mapoverlayTopRightLat = mapoverlayTopRightLat;
        this.mapoverlayTopRightLng = mapoverlayTopRightLng;
        this.mapoverlaysIsLegend = mapoverlaysIsLegend;
        this.referenceTable = referenceTable;
        this.foreignId = foreignId;
        this.datasetId = datasetId;
        this.datasetName = datasetName;
        this.datasetDescription = datasetDescription;
        this.datasetType = datasetType;
        this.recordingDate = recordingDate;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableMapoverlays (");

        sb.append(mapoverlayId);
        sb.append(", ").append(mapoverlayName);
        sb.append(", ").append(mapoverlayDescription);
        sb.append(", ").append(mapoverlayBottomLeftLat);
        sb.append(", ").append(mapoverlayBottomLeftLng);
        sb.append(", ").append(mapoverlayTopRightLat);
        sb.append(", ").append(mapoverlayTopRightLng);
        sb.append(", ").append(mapoverlaysIsLegend);
        sb.append(", ").append(referenceTable);
        sb.append(", ").append(foreignId);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(datasetName);
        sb.append(", ").append(datasetDescription);
        sb.append(", ").append(datasetType);
        sb.append(", ").append(recordingDate);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
