/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Arrays;

import jhi.germinate.server.database.pojo.GermplasmInstitution;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableGermplasmDeprecated implements Serializable {

    private static final long serialVersionUID = 1L;

    private String                 germplasmName;
    private Integer                germplasmId;
    private String                 germplasmGid;
    private String                 germplasmNumber;
    private String                 gerplasmPuid;
    private Integer                entityTypeId;
    private String                 entityTypeName;
    private Integer                entityParentId;
    private String                 entityParentName;
    private String                 entityParentGeneralIdentifier;
    private Integer                biologicalStatusId;
    private String                 biologicalStatusName;
    private String[]               synonyms;
    private String                 collectorNumber;
    private String                 genus;
    private String                 species;
    private String                 subtaxa;
    private GermplasmInstitution[] institutions;
    private String                 location;
    private BigDecimal             latitude;
    private BigDecimal             longitude;
    private BigDecimal             elevation;
    private String                 countryName;
    private String                 countryCode;
    private String                 collDate;
    private Double                 pdci;
    private Long                   imageCount;
    private String                 firstImagePath;
    private Integer                hasTrialsData;
    private Integer                hasGenotypicData;
    private Integer                hasAllelefreqData;

    public ViewTableGermplasmDeprecated() {}

    public ViewTableGermplasmDeprecated(ViewTableGermplasmDeprecated value) {
        this.germplasmName = value.germplasmName;
        this.germplasmId = value.germplasmId;
        this.germplasmGid = value.germplasmGid;
        this.germplasmNumber = value.germplasmNumber;
        this.gerplasmPuid = value.gerplasmPuid;
        this.entityTypeId = value.entityTypeId;
        this.entityTypeName = value.entityTypeName;
        this.entityParentId = value.entityParentId;
        this.entityParentName = value.entityParentName;
        this.entityParentGeneralIdentifier = value.entityParentGeneralIdentifier;
        this.biologicalStatusId = value.biologicalStatusId;
        this.biologicalStatusName = value.biologicalStatusName;
        this.synonyms = value.synonyms;
        this.collectorNumber = value.collectorNumber;
        this.genus = value.genus;
        this.species = value.species;
        this.subtaxa = value.subtaxa;
        this.institutions = value.institutions;
        this.location = value.location;
        this.latitude = value.latitude;
        this.longitude = value.longitude;
        this.elevation = value.elevation;
        this.countryName = value.countryName;
        this.countryCode = value.countryCode;
        this.collDate = value.collDate;
        this.pdci = value.pdci;
        this.imageCount = value.imageCount;
        this.firstImagePath = value.firstImagePath;
        this.hasTrialsData = value.hasTrialsData;
        this.hasGenotypicData = value.hasGenotypicData;
        this.hasAllelefreqData = value.hasAllelefreqData;
    }

    public ViewTableGermplasmDeprecated(
        String                 germplasmName,
        Integer                germplasmId,
        String                 germplasmGid,
        String                 germplasmNumber,
        String                 gerplasmPuid,
        Integer                entityTypeId,
        String                 entityTypeName,
        Integer                entityParentId,
        String                 entityParentName,
        String                 entityParentGeneralIdentifier,
        Integer                biologicalStatusId,
        String                 biologicalStatusName,
        String[]               synonyms,
        String                 collectorNumber,
        String                 genus,
        String                 species,
        String                 subtaxa,
        GermplasmInstitution[] institutions,
        String                 location,
        BigDecimal             latitude,
        BigDecimal             longitude,
        BigDecimal             elevation,
        String                 countryName,
        String                 countryCode,
        String                 collDate,
        Double                 pdci,
        Long                   imageCount,
        String                 firstImagePath,
        Integer                hasTrialsData,
        Integer                hasGenotypicData,
        Integer                hasAllelefreqData
    ) {
        this.germplasmName = germplasmName;
        this.germplasmId = germplasmId;
        this.germplasmGid = germplasmGid;
        this.germplasmNumber = germplasmNumber;
        this.gerplasmPuid = gerplasmPuid;
        this.entityTypeId = entityTypeId;
        this.entityTypeName = entityTypeName;
        this.entityParentId = entityParentId;
        this.entityParentName = entityParentName;
        this.entityParentGeneralIdentifier = entityParentGeneralIdentifier;
        this.biologicalStatusId = biologicalStatusId;
        this.biologicalStatusName = biologicalStatusName;
        this.synonyms = synonyms;
        this.collectorNumber = collectorNumber;
        this.genus = genus;
        this.species = species;
        this.subtaxa = subtaxa;
        this.institutions = institutions;
        this.location = location;
        this.latitude = latitude;
        this.longitude = longitude;
        this.elevation = elevation;
        this.countryName = countryName;
        this.countryCode = countryCode;
        this.collDate = collDate;
        this.pdci = pdci;
        this.imageCount = imageCount;
        this.firstImagePath = firstImagePath;
        this.hasTrialsData = hasTrialsData;
        this.hasGenotypicData = hasGenotypicData;
        this.hasAllelefreqData = hasAllelefreqData;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableGermplasmDeprecated (");

        sb.append(germplasmName);
        sb.append(", ").append(germplasmId);
        sb.append(", ").append(germplasmGid);
        sb.append(", ").append(germplasmNumber);
        sb.append(", ").append(gerplasmPuid);
        sb.append(", ").append(entityTypeId);
        sb.append(", ").append(entityTypeName);
        sb.append(", ").append(entityParentId);
        sb.append(", ").append(entityParentName);
        sb.append(", ").append(entityParentGeneralIdentifier);
        sb.append(", ").append(biologicalStatusId);
        sb.append(", ").append(biologicalStatusName);
        sb.append(", ").append(Arrays.toString(synonyms));
        sb.append(", ").append(collectorNumber);
        sb.append(", ").append(genus);
        sb.append(", ").append(species);
        sb.append(", ").append(subtaxa);
        sb.append(", ").append(Arrays.toString(institutions));
        sb.append(", ").append(location);
        sb.append(", ").append(latitude);
        sb.append(", ").append(longitude);
        sb.append(", ").append(elevation);
        sb.append(", ").append(countryName);
        sb.append(", ").append(countryCode);
        sb.append(", ").append(collDate);
        sb.append(", ").append(pdci);
        sb.append(", ").append(imageCount);
        sb.append(", ").append(firstImagePath);
        sb.append(", ").append(hasTrialsData);
        sb.append(", ").append(hasGenotypicData);
        sb.append(", ").append(hasAllelefreqData);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
