/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.tables.records.GermplasmdatawarningsRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Germplasmdatawarnings extends TableImpl<GermplasmdatawarningsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>germinate_db.germplasmdatawarnings</code>
     */
    public static final Germplasmdatawarnings GERMPLASMDATAWARNINGS = new Germplasmdatawarnings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GermplasmdatawarningsRecord> getRecordType() {
        return GermplasmdatawarningsRecord.class;
    }

    /**
     * The column
     * <code>germinate_db.germplasmdatawarnings.germinatebase_id</code>.
     */
    public final TableField<GermplasmdatawarningsRecord, Integer> GERMINATEBASE_ID = createField(DSL.name("germinatebase_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>germinate_db.germplasmdatawarnings.datawarning_id</code>.
     */
    public final TableField<GermplasmdatawarningsRecord, Integer> DATAWARNING_ID = createField(DSL.name("datawarning_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>germinate_db.germplasmdatawarnings.created_on</code>.
     */
    public final TableField<GermplasmdatawarningsRecord, Timestamp> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>germinate_db.germplasmdatawarnings.updated_on</code>.
     */
    public final TableField<GermplasmdatawarningsRecord, Timestamp> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private Germplasmdatawarnings(Name alias, Table<GermplasmdatawarningsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Germplasmdatawarnings(Name alias, Table<GermplasmdatawarningsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>germinate_db.germplasmdatawarnings</code> table
     * reference
     */
    public Germplasmdatawarnings(String alias) {
        this(DSL.name(alias), GERMPLASMDATAWARNINGS);
    }

    /**
     * Create an aliased <code>germinate_db.germplasmdatawarnings</code> table
     * reference
     */
    public Germplasmdatawarnings(Name alias) {
        this(alias, GERMPLASMDATAWARNINGS);
    }

    /**
     * Create a <code>germinate_db.germplasmdatawarnings</code> table reference
     */
    public Germplasmdatawarnings() {
        this(DSL.name("germplasmdatawarnings"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : GerminateDb.GERMINATE_DB;
    }

    @Override
    public UniqueKey<GermplasmdatawarningsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(Germplasmdatawarnings.GERMPLASMDATAWARNINGS, DSL.name("KEY_germplasmdatawarnings_PRIMARY"), new TableField[] { Germplasmdatawarnings.GERMPLASMDATAWARNINGS.GERMINATEBASE_ID, Germplasmdatawarnings.GERMPLASMDATAWARNINGS.DATAWARNING_ID }, true);
    }

    @Override
    public Germplasmdatawarnings as(String alias) {
        return new Germplasmdatawarnings(DSL.name(alias), this);
    }

    @Override
    public Germplasmdatawarnings as(Name alias) {
        return new Germplasmdatawarnings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Germplasmdatawarnings rename(String name) {
        return new Germplasmdatawarnings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Germplasmdatawarnings rename(Name name) {
        return new Germplasmdatawarnings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
    // @formatter:on
}
