/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Arrays;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * Allows the definition of synonyms for entries such as germinatebase entries
 * or marker names.
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Synonyms implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private Integer   foreignId;
    private Integer   synonymtypeId;
    private String[]  synonyms;
    private Timestamp createdOn;
    private Timestamp updatedOn;

    public Synonyms() {}

    public Synonyms(Synonyms value) {
        this.id = value.id;
        this.foreignId = value.foreignId;
        this.synonymtypeId = value.synonymtypeId;
        this.synonyms = value.synonyms;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Synonyms(
        Integer   id,
        Integer   foreignId,
        Integer   synonymtypeId,
        String[]  synonyms,
        Timestamp createdOn,
        Timestamp updatedOn
    ) {
        this.id = id;
        this.foreignId = foreignId;
        this.synonymtypeId = synonymtypeId;
        this.synonyms = synonyms;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Synonyms (");

        sb.append(id);
        sb.append(", ").append(foreignId);
        sb.append(", ").append(synonymtypeId);
        sb.append(", ").append(Arrays.toString(synonyms));
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
