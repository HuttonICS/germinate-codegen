/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Arrays;

import jhi.germinate.server.database.codegen.enums.DataImportJobsDatatype;
import jhi.germinate.server.database.codegen.enums.DataImportJobsStatus;
import jhi.germinate.server.database.pojo.ImportResult;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataImportJobs implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                id;
    private String                 uuid;
    private String                 jobId;
    private Integer                userId;
    private String                 originalFilename;
    private Boolean                isUpdate;
    private Integer                datasetstateId;
    private DataImportJobsDatatype datatype;
    private DataImportJobsStatus   status;
    private Boolean                imported;
    private Boolean                visibility;
    private ImportResult[]         feedback;
    private Timestamp              createdOn;
    private Timestamp              updatedOn;

    public DataImportJobs() {}

    public DataImportJobs(DataImportJobs value) {
        this.id = value.id;
        this.uuid = value.uuid;
        this.jobId = value.jobId;
        this.userId = value.userId;
        this.originalFilename = value.originalFilename;
        this.isUpdate = value.isUpdate;
        this.datasetstateId = value.datasetstateId;
        this.datatype = value.datatype;
        this.status = value.status;
        this.imported = value.imported;
        this.visibility = value.visibility;
        this.feedback = value.feedback;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public DataImportJobs(
        Integer                id,
        String                 uuid,
        String                 jobId,
        Integer                userId,
        String                 originalFilename,
        Boolean                isUpdate,
        Integer                datasetstateId,
        DataImportJobsDatatype datatype,
        DataImportJobsStatus   status,
        Boolean                imported,
        Boolean                visibility,
        ImportResult[]         feedback,
        Timestamp              createdOn,
        Timestamp              updatedOn
    ) {
        this.id = id;
        this.uuid = uuid;
        this.jobId = jobId;
        this.userId = userId;
        this.originalFilename = originalFilename;
        this.isUpdate = isUpdate;
        this.datasetstateId = datasetstateId;
        this.datatype = datatype;
        this.status = status;
        this.imported = imported;
        this.visibility = visibility;
        this.feedback = feedback;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.uuid</code>.
     */
    public String getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.uuid</code>.
     */
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.job_id</code>.
     */
    public String getJobId() {
        return this.jobId;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.job_id</code>.
     */
    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.user_id</code>.
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.original_filename</code>.
     */
    public String getOriginalFilename() {
        return this.originalFilename;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.original_filename</code>.
     */
    public void setOriginalFilename(String originalFilename) {
        this.originalFilename = originalFilename;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.is_update</code>.
     */
    public Boolean getIsUpdate() {
        return this.isUpdate;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.is_update</code>.
     */
    public void setIsUpdate(Boolean isUpdate) {
        this.isUpdate = isUpdate;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.datasetstate_id</code>.
     */
    public Integer getDatasetstateId() {
        return this.datasetstateId;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.datasetstate_id</code>.
     */
    public void setDatasetstateId(Integer datasetstateId) {
        this.datasetstateId = datasetstateId;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.datatype</code>.
     */
    public DataImportJobsDatatype getDatatype() {
        return this.datatype;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.datatype</code>.
     */
    public void setDatatype(DataImportJobsDatatype datatype) {
        this.datatype = datatype;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.status</code>.
     */
    public DataImportJobsStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.status</code>.
     */
    public void setStatus(DataImportJobsStatus status) {
        this.status = status;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.imported</code>.
     */
    public Boolean getImported() {
        return this.imported;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.imported</code>.
     */
    public void setImported(Boolean imported) {
        this.imported = imported;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.visibility</code>.
     */
    public Boolean getVisibility() {
        return this.visibility;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.visibility</code>.
     */
    public void setVisibility(Boolean visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.feedback</code>.
     */
    public ImportResult[] getFeedback() {
        return this.feedback;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.feedback</code>.
     */
    public void setFeedback(ImportResult[] feedback) {
        this.feedback = feedback;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.created_on</code>.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>germinate_db.data_import_jobs.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>germinate_db.data_import_jobs.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DataImportJobs (");

        sb.append(id);
        sb.append(", ").append(uuid);
        sb.append(", ").append(jobId);
        sb.append(", ").append(userId);
        sb.append(", ").append(originalFilename);
        sb.append(", ").append(isUpdate);
        sb.append(", ").append(datasetstateId);
        sb.append(", ").append(datatype);
        sb.append(", ").append(status);
        sb.append(", ").append(imported);
        sb.append(", ").append(visibility);
        sb.append(", ").append(Arrays.toString(feedback));
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
