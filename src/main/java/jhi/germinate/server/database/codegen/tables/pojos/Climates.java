/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.enums.ClimatesDatatype;


// @formatter:off
/**
 * Defines climates. Climates are measureable weather type characteristics such
 * as temperature or cloud cover.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Climates implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer          id;
    private String           name;
    private String           shortName;
    private String           description;
    private ClimatesDatatype datatype;
    private Integer          unitId;
    private Timestamp        createdOn;
    private Timestamp        updatedOn;

    public Climates() {}

    public Climates(Climates value) {
        this.id = value.id;
        this.name = value.name;
        this.shortName = value.shortName;
        this.description = value.description;
        this.datatype = value.datatype;
        this.unitId = value.unitId;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Climates(
        Integer          id,
        String           name,
        String           shortName,
        String           description,
        ClimatesDatatype datatype,
        Integer          unitId,
        Timestamp        createdOn,
        Timestamp        updatedOn
    ) {
        this.id = id;
        this.name = name;
        this.shortName = shortName;
        this.description = description;
        this.datatype = datatype;
        this.unitId = unitId;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>germinate_db.climates.id</code>. Primary id for this
     * table. This uniquely identifies the row.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>germinate_db.climates.id</code>. Primary id for this
     * table. This uniquely identifies the row.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>germinate_db.climates.name</code>. Describes the
     * climate.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>germinate_db.climates.name</code>. Describes the
     * climate.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>germinate_db.climates.short_name</code>. Shortened
     * version of the climate name which is used in some table headers.
     */
    public String getShortName() {
        return this.shortName;
    }

    /**
     * Setter for <code>germinate_db.climates.short_name</code>. Shortened
     * version of the climate name which is used in some table headers.
     */
    public void setShortName(String shortName) {
        this.shortName = shortName;
    }

    /**
     * Getter for <code>germinate_db.climates.description</code>. A longer
     * description of the climate.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>germinate_db.climates.description</code>. A longer
     * description of the climate.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>germinate_db.climates.datatype</code>. Defines the data
     * type of the climate. This can be of numeric, text, date or categorical
     * types.
     */
    public ClimatesDatatype getDatatype() {
        return this.datatype;
    }

    /**
     * Setter for <code>germinate_db.climates.datatype</code>. Defines the data
     * type of the climate. This can be of numeric, text, date or categorical
     * types.
     */
    public void setDatatype(ClimatesDatatype datatype) {
        this.datatype = datatype;
    }

    /**
     * Getter for <code>germinate_db.climates.unit_id</code>. Foreign key to
     * units (units.id).

     */
    public Integer getUnitId() {
        return this.unitId;
    }

    /**
     * Setter for <code>germinate_db.climates.unit_id</code>. Foreign key to
     * units (units.id).

     */
    public void setUnitId(Integer unitId) {
        this.unitId = unitId;
    }

    /**
     * Getter for <code>germinate_db.climates.created_on</code>. When the record
     * was created.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>germinate_db.climates.created_on</code>. When the record
     * was created.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>germinate_db.climates.updated_on</code>. When the record
     * was updated. This may be different from the created on date if subsequent
     * changes have been made to the underlying record.
     */
    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>germinate_db.climates.updated_on</code>. When the record
     * was updated. This may be different from the created on date if subsequent
     * changes have been made to the underlying record.
     */
    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Climates (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(shortName);
        sb.append(", ").append(description);
        sb.append(", ").append(datatype);
        sb.append(", ").append(unitId);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
