/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.germinate.server.database.codegen.tables.ViewTableImages;
import jhi.germinate.server.database.pojo.Exif;
import jhi.germinate.server.database.pojo.ImageTag;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableImagesRecord extends TableRecordImpl<ViewTableImagesRecord> implements Record11<Integer, String, Integer, Boolean, String, Exif, String, String, String, Timestamp, ImageTag[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>germinate_db.view_table_images.image_id</code>.
     */
    public void setImageId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_id</code>.
     */
    public Integer getImageId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.image_description</code>.
     */
    public void setImageDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_description</code>.
     */
    public String getImageDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.image_foreign_id</code>.
     */
    public void setImageForeignId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_foreign_id</code>.
     */
    public Integer getImageForeignId() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_images.image_is_reference</code>.
     */
    public void setImageIsReference(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_images.image_is_reference</code>.
     */
    public Boolean getImageIsReference() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.image_path</code>.
     */
    public void setImagePath(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_path</code>.
     */
    public String getImagePath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.image_exif</code>.
     */
    public void setImageExif(Exif value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_exif</code>.
     */
    public Exif getImageExif() {
        return (Exif) get(5);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.image_type</code>.
     */
    public void setImageType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_type</code>.
     */
    public String getImageType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.image_ref_table</code>.
     */
    public void setImageRefTable(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.image_ref_table</code>.
     */
    public String getImageRefTable() {
        return (String) get(7);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.reference_name</code>.
     */
    public void setReferenceName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.reference_name</code>.
     */
    public String getReferenceName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>germinate_db.view_table_images.tags</code>.
     */
    public void setTags(ImageTag[] value) {
        set(10, value);
    }

    /**
     * Getter for <code>germinate_db.view_table_images.tags</code>.
     */
    public ImageTag[] getTags() {
        return (ImageTag[]) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, Integer, Boolean, String, Exif, String, String, String, Timestamp, ImageTag[]> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, Integer, Boolean, String, Exif, String, String, String, Timestamp, ImageTag[]> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_ID;
    }

    @Override
    public Field<String> field2() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_DESCRIPTION;
    }

    @Override
    public Field<Integer> field3() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_FOREIGN_ID;
    }

    @Override
    public Field<Boolean> field4() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_IS_REFERENCE;
    }

    @Override
    public Field<String> field5() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_PATH;
    }

    @Override
    public Field<Exif> field6() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_EXIF;
    }

    @Override
    public Field<String> field7() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_TYPE;
    }

    @Override
    public Field<String> field8() {
        return ViewTableImages.VIEW_TABLE_IMAGES.IMAGE_REF_TABLE;
    }

    @Override
    public Field<String> field9() {
        return ViewTableImages.VIEW_TABLE_IMAGES.REFERENCE_NAME;
    }

    @Override
    public Field<Timestamp> field10() {
        return ViewTableImages.VIEW_TABLE_IMAGES.CREATED_ON;
    }

    @Override
    public Field<ImageTag[]> field11() {
        return ViewTableImages.VIEW_TABLE_IMAGES.TAGS;
    }

    @Override
    public Integer component1() {
        return getImageId();
    }

    @Override
    public String component2() {
        return getImageDescription();
    }

    @Override
    public Integer component3() {
        return getImageForeignId();
    }

    @Override
    public Boolean component4() {
        return getImageIsReference();
    }

    @Override
    public String component5() {
        return getImagePath();
    }

    @Override
    public Exif component6() {
        return getImageExif();
    }

    @Override
    public String component7() {
        return getImageType();
    }

    @Override
    public String component8() {
        return getImageRefTable();
    }

    @Override
    public String component9() {
        return getReferenceName();
    }

    @Override
    public Timestamp component10() {
        return getCreatedOn();
    }

    @Override
    public ImageTag[] component11() {
        return getTags();
    }

    @Override
    public Integer value1() {
        return getImageId();
    }

    @Override
    public String value2() {
        return getImageDescription();
    }

    @Override
    public Integer value3() {
        return getImageForeignId();
    }

    @Override
    public Boolean value4() {
        return getImageIsReference();
    }

    @Override
    public String value5() {
        return getImagePath();
    }

    @Override
    public Exif value6() {
        return getImageExif();
    }

    @Override
    public String value7() {
        return getImageType();
    }

    @Override
    public String value8() {
        return getImageRefTable();
    }

    @Override
    public String value9() {
        return getReferenceName();
    }

    @Override
    public Timestamp value10() {
        return getCreatedOn();
    }

    @Override
    public ImageTag[] value11() {
        return getTags();
    }

    @Override
    public ViewTableImagesRecord value1(Integer value) {
        setImageId(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value2(String value) {
        setImageDescription(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value3(Integer value) {
        setImageForeignId(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value4(Boolean value) {
        setImageIsReference(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value5(String value) {
        setImagePath(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value6(Exif value) {
        setImageExif(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value7(String value) {
        setImageType(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value8(String value) {
        setImageRefTable(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value9(String value) {
        setReferenceName(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value10(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord value11(ImageTag[] value) {
        setTags(value);
        return this;
    }

    @Override
    public ViewTableImagesRecord values(Integer value1, String value2, Integer value3, Boolean value4, String value5, Exif value6, String value7, String value8, String value9, Timestamp value10, ImageTag[] value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTableImagesRecord
     */
    public ViewTableImagesRecord() {
        super(ViewTableImages.VIEW_TABLE_IMAGES);
    }

    /**
     * Create a detached, initialised ViewTableImagesRecord
     */
    public ViewTableImagesRecord(Integer imageId, String imageDescription, Integer imageForeignId, Boolean imageIsReference, String imagePath, Exif imageExif, String imageType, String imageRefTable, String referenceName, Timestamp createdOn, ImageTag[] tags) {
        super(ViewTableImages.VIEW_TABLE_IMAGES);

        setImageId(imageId);
        setImageDescription(imageDescription);
        setImageForeignId(imageForeignId);
        setImageIsReference(imageIsReference);
        setImagePath(imagePath);
        setImageExif(imageExif);
        setImageType(imageType);
        setImageRefTable(imageRefTable);
        setReferenceName(referenceName);
        setCreatedOn(createdOn);
        setTags(tags);
    }

    /**
     * Create a detached, initialised ViewTableImagesRecord
     */
    public ViewTableImagesRecord(jhi.germinate.server.database.codegen.tables.pojos.ViewTableImages value) {
        super(ViewTableImages.VIEW_TABLE_IMAGES);

        if (value != null) {
            setImageId(value.getImageId());
            setImageDescription(value.getImageDescription());
            setImageForeignId(value.getImageForeignId());
            setImageIsReference(value.getImageIsReference());
            setImagePath(value.getImagePath());
            setImageExif(value.getImageExif());
            setImageType(value.getImageType());
            setImageRefTable(value.getImageRefTable());
            setReferenceName(value.getReferenceName());
            setCreatedOn(value.getCreatedOn());
            setTags(value.getTags());
        }
    }
    // @formatter:on
}
