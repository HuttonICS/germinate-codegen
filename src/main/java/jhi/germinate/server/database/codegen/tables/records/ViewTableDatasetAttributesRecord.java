/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.records;


import jhi.germinate.server.database.codegen.enums.ViewTableDatasetAttributesAttributeType;
import jhi.germinate.server.database.codegen.tables.ViewTableDatasetAttributes;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableDatasetAttributesRecord extends TableRecordImpl<ViewTableDatasetAttributesRecord> implements Record10<Integer, String, String, Integer, String, String, ViewTableDatasetAttributesAttributeType, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setDatasetId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.dataset_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getDatasetId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.dataset_name</code>.
     * Describes the dataset.
     */
    public void setDatasetName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.dataset_name</code>.
     * Describes the dataset.
     */
    public String getDatasetName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.dataset_description</code>.
     * The name of this dataset.
     */
    public void setDatasetDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.dataset_description</code>.
     * The name of this dataset.
     */
    public String getDatasetDescription() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public void setAttributeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_id</code>.
     * Primary id for this table. This uniquely identifies the row.
     */
    public Integer getAttributeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_name</code>.
     * Defines the name of the attribute.
     */
    public void setAttributeName(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_name</code>.
     * Defines the name of the attribute.
     */
    public String getAttributeName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_description</code>.
     * Describes the attribute. This should expand on the name to make it clear
     * what the attribute actually is.
     */
    public void setAttributeDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_description</code>.
     * Describes the attribute. This should expand on the name to make it clear
     * what the attribute actually is.
     */
    public String getAttributeDescription() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_type</code>.
     * Defines the data type of the attribute. This can be of numeric, text,
     * date or categorical types.
     */
    public void setAttributeType(ViewTableDatasetAttributesAttributeType value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_type</code>.
     * Defines the data type of the attribute. This can be of numeric, text,
     * date or categorical types.
     */
    public ViewTableDatasetAttributesAttributeType getAttributeType() {
        return (ViewTableDatasetAttributesAttributeType) get(6);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.target_table</code>.
     */
    public void setTargetTable(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.target_table</code>.
     */
    public String getTargetTable() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.foreign_id</code>.
     * Foreign key to germinatebase (germinatebase.id).
     */
    public void setForeignId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.foreign_id</code>.
     * Foreign key to germinatebase (germinatebase.id).
     */
    public Integer getForeignId() {
        return (Integer) get(8);
    }

    /**
     * Setter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_value</code>.
     * The value of the attribute.
     */
    public void setAttributeValue(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>germinate_db.view_table_dataset_attributes.attribute_value</code>.
     * The value of the attribute.
     */
    public String getAttributeValue() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, Integer, String, String, ViewTableDatasetAttributesAttributeType, String, Integer, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, Integer, String, String, ViewTableDatasetAttributesAttributeType, String, Integer, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.DATASET_ID;
    }

    @Override
    public Field<String> field2() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.DATASET_NAME;
    }

    @Override
    public Field<String> field3() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.DATASET_DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.ATTRIBUTE_ID;
    }

    @Override
    public Field<String> field5() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.ATTRIBUTE_NAME;
    }

    @Override
    public Field<String> field6() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.ATTRIBUTE_DESCRIPTION;
    }

    @Override
    public Field<ViewTableDatasetAttributesAttributeType> field7() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.ATTRIBUTE_TYPE;
    }

    @Override
    public Field<String> field8() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.TARGET_TABLE;
    }

    @Override
    public Field<Integer> field9() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.FOREIGN_ID;
    }

    @Override
    public Field<String> field10() {
        return ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES.ATTRIBUTE_VALUE;
    }

    @Override
    public Integer component1() {
        return getDatasetId();
    }

    @Override
    public String component2() {
        return getDatasetName();
    }

    @Override
    public String component3() {
        return getDatasetDescription();
    }

    @Override
    public Integer component4() {
        return getAttributeId();
    }

    @Override
    public String component5() {
        return getAttributeName();
    }

    @Override
    public String component6() {
        return getAttributeDescription();
    }

    @Override
    public ViewTableDatasetAttributesAttributeType component7() {
        return getAttributeType();
    }

    @Override
    public String component8() {
        return getTargetTable();
    }

    @Override
    public Integer component9() {
        return getForeignId();
    }

    @Override
    public String component10() {
        return getAttributeValue();
    }

    @Override
    public Integer value1() {
        return getDatasetId();
    }

    @Override
    public String value2() {
        return getDatasetName();
    }

    @Override
    public String value3() {
        return getDatasetDescription();
    }

    @Override
    public Integer value4() {
        return getAttributeId();
    }

    @Override
    public String value5() {
        return getAttributeName();
    }

    @Override
    public String value6() {
        return getAttributeDescription();
    }

    @Override
    public ViewTableDatasetAttributesAttributeType value7() {
        return getAttributeType();
    }

    @Override
    public String value8() {
        return getTargetTable();
    }

    @Override
    public Integer value9() {
        return getForeignId();
    }

    @Override
    public String value10() {
        return getAttributeValue();
    }

    @Override
    public ViewTableDatasetAttributesRecord value1(Integer value) {
        setDatasetId(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value2(String value) {
        setDatasetName(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value3(String value) {
        setDatasetDescription(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value4(Integer value) {
        setAttributeId(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value5(String value) {
        setAttributeName(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value6(String value) {
        setAttributeDescription(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value7(ViewTableDatasetAttributesAttributeType value) {
        setAttributeType(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value8(String value) {
        setTargetTable(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value9(Integer value) {
        setForeignId(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord value10(String value) {
        setAttributeValue(value);
        return this;
    }

    @Override
    public ViewTableDatasetAttributesRecord values(Integer value1, String value2, String value3, Integer value4, String value5, String value6, ViewTableDatasetAttributesAttributeType value7, String value8, Integer value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTableDatasetAttributesRecord
     */
    public ViewTableDatasetAttributesRecord() {
        super(ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES);
    }

    /**
     * Create a detached, initialised ViewTableDatasetAttributesRecord
     */
    public ViewTableDatasetAttributesRecord(Integer datasetId, String datasetName, String datasetDescription, Integer attributeId, String attributeName, String attributeDescription, ViewTableDatasetAttributesAttributeType attributeType, String targetTable, Integer foreignId, String attributeValue) {
        super(ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES);

        setDatasetId(datasetId);
        setDatasetName(datasetName);
        setDatasetDescription(datasetDescription);
        setAttributeId(attributeId);
        setAttributeName(attributeName);
        setAttributeDescription(attributeDescription);
        setAttributeType(attributeType);
        setTargetTable(targetTable);
        setForeignId(foreignId);
        setAttributeValue(attributeValue);
    }

    /**
     * Create a detached, initialised ViewTableDatasetAttributesRecord
     */
    public ViewTableDatasetAttributesRecord(jhi.germinate.server.database.codegen.tables.pojos.ViewTableDatasetAttributes value) {
        super(ViewTableDatasetAttributes.VIEW_TABLE_DATASET_ATTRIBUTES);

        if (value != null) {
            setDatasetId(value.getDatasetId());
            setDatasetName(value.getDatasetName());
            setDatasetDescription(value.getDatasetDescription());
            setAttributeId(value.getAttributeId());
            setAttributeName(value.getAttributeName());
            setAttributeDescription(value.getAttributeDescription());
            setAttributeType(value.getAttributeType());
            setTargetTable(value.getTargetTable());
            setForeignId(value.getForeignId());
            setAttributeValue(value.getAttributeValue());
        }
    }
    // @formatter:on
}
