/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jhi.germinate.server.database.binding.IntArrayBinding;
import jhi.germinate.server.database.codegen.GerminateDb;
import jhi.germinate.server.database.codegen.enums.ViewTablePublicationsReferenceType;
import jhi.germinate.server.database.codegen.tables.records.ViewTablePublicationsRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTablePublications extends TableImpl<ViewTablePublicationsRecord> {

    private static final long serialVersionUID = -1713737167;

    /**
     * The reference instance of <code>germinate_db.view_table_publications</code>
     */
    public static final ViewTablePublications VIEW_TABLE_PUBLICATIONS = new ViewTablePublications();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewTablePublicationsRecord> getRecordType() {
        return ViewTablePublicationsRecord.class;
    }

    /**
     * The column <code>germinate_db.view_table_publications.publication_id</code>.
     */
    public final TableField<ViewTablePublicationsRecord, Integer> PUBLICATION_ID = createField("publication_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>germinate_db.view_table_publications.publication_doi</code>.
     */
    public final TableField<ViewTablePublicationsRecord, String> PUBLICATION_DOI = createField("publication_doi", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>germinate_db.view_table_publications.publication_fallback_cache</code>.
     */
    public final TableField<ViewTablePublicationsRecord, String> PUBLICATION_FALLBACK_CACHE = createField("publication_fallback_cache", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>germinate_db.view_table_publications.reference_type</code>.
     */
    public final TableField<ViewTablePublicationsRecord, ViewTablePublicationsReferenceType> REFERENCE_TYPE = createField("reference_type", org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("database", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(jhi.germinate.server.database.codegen.enums.ViewTablePublicationsReferenceType.class), this, "");

    /**
     * The column <code>germinate_db.view_table_publications.referencing_ids</code>.
     */
    public final TableField<ViewTablePublicationsRecord, Integer[]> REFERENCING_IDS = createField("referencing_ids", org.jooq.impl.DefaultDataType.getDefaultDataType("\"germinate_template_4_21_10_05\".\"view_table_publications_referencing_ids\""), this, "", new IntArrayBinding());

    /**
     * The column <code>germinate_db.view_table_publications.updated_on</code>.
     */
    public final TableField<ViewTablePublicationsRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>germinate_db.view_table_publications</code> table reference
     */
    public ViewTablePublications() {
        this(DSL.name("view_table_publications"), null);
    }

    /**
     * Create an aliased <code>germinate_db.view_table_publications</code> table reference
     */
    public ViewTablePublications(String alias) {
        this(DSL.name(alias), VIEW_TABLE_PUBLICATIONS);
    }

    /**
     * Create an aliased <code>germinate_db.view_table_publications</code> table reference
     */
    public ViewTablePublications(Name alias) {
        this(alias, VIEW_TABLE_PUBLICATIONS);
    }

    private ViewTablePublications(Name alias, Table<ViewTablePublicationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewTablePublications(Name alias, Table<ViewTablePublicationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateDb.GERMINATE_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTablePublications as(String alias) {
        return new ViewTablePublications(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTablePublications as(Name alias) {
        return new ViewTablePublications(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTablePublications rename(String name) {
        return new ViewTablePublications(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTablePublications rename(Name name) {
        return new ViewTablePublications(name, null);
    }
// @formatter:on
}
