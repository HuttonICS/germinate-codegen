/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableMaps implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer mapId;
    private String  mapName;
    private String  mapDescription;
    private Integer userId;
    private Boolean visibility;
    private Long    markerCount;

    public ViewTableMaps() {}

    public ViewTableMaps(ViewTableMaps value) {
        this.mapId = value.mapId;
        this.mapName = value.mapName;
        this.mapDescription = value.mapDescription;
        this.userId = value.userId;
        this.visibility = value.visibility;
        this.markerCount = value.markerCount;
    }

    public ViewTableMaps(
        Integer mapId,
        String  mapName,
        String  mapDescription,
        Integer userId,
        Boolean visibility,
        Long    markerCount
    ) {
        this.mapId = mapId;
        this.mapName = mapName;
        this.mapDescription = mapDescription;
        this.userId = userId;
        this.visibility = visibility;
        this.markerCount = markerCount;
    }

    /**
     * Getter for <code>germinate_db.view_table_maps.map_id</code>. Primary id
     * for this table. This uniquely identifies the row.
     */
    public Integer getMapId() {
        return this.mapId;
    }

    /**
     * Setter for <code>germinate_db.view_table_maps.map_id</code>. Primary id
     * for this table. This uniquely identifies the row.
     */
    public void setMapId(Integer mapId) {
        this.mapId = mapId;
    }

    /**
     * Getter for <code>germinate_db.view_table_maps.map_name</code>. Describes
     * the map.
     */
    public String getMapName() {
        return this.mapName;
    }

    /**
     * Setter for <code>germinate_db.view_table_maps.map_name</code>. Describes
     * the map.
     */
    public void setMapName(String mapName) {
        this.mapName = mapName;
    }

    /**
     * Getter for <code>germinate_db.view_table_maps.map_description</code>. The
     * name of this map.
     */
    public String getMapDescription() {
        return this.mapDescription;
    }

    /**
     * Setter for <code>germinate_db.view_table_maps.map_description</code>. The
     * name of this map.
     */
    public void setMapDescription(String mapDescription) {
        this.mapDescription = mapDescription;
    }

    /**
     * Getter for <code>germinate_db.view_table_maps.user_id</code>. Foreign key
     * to Gatekeeper users (Gatekeeper users.id).
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>germinate_db.view_table_maps.user_id</code>. Foreign key
     * to Gatekeeper users (Gatekeeper users.id).
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>germinate_db.view_table_maps.visibility</code>.
     * Determines if the map is visible to the Germinate interface or hidden.
     */
    public Boolean getVisibility() {
        return this.visibility;
    }

    /**
     * Setter for <code>germinate_db.view_table_maps.visibility</code>.
     * Determines if the map is visible to the Germinate interface or hidden.
     */
    public void setVisibility(Boolean visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for <code>germinate_db.view_table_maps.marker_count</code>.
     */
    public Long getMarkerCount() {
        return this.markerCount;
    }

    /**
     * Setter for <code>germinate_db.view_table_maps.marker_count</code>.
     */
    public void setMarkerCount(Long markerCount) {
        this.markerCount = markerCount;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableMaps (");

        sb.append(mapId);
        sb.append(", ").append(mapName);
        sb.append(", ").append(mapDescription);
        sb.append(", ").append(userId);
        sb.append(", ").append(visibility);
        sb.append(", ").append(markerCount);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
