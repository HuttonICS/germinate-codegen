/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;

import javax.annotation.Generated;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableCompounds implements Serializable {

    private static final long serialVersionUID = 2143182480;

    private Integer  compoundId;
    private String   compoundName;
    private String   compoundDescription;
    private Integer  unitId;
    private String   unitName;
    private String   unitDescription;
    private String   unitAbbreviation;
    private String[] synonyms;
    private Long     count;

    public ViewTableCompounds() {}

    public ViewTableCompounds(ViewTableCompounds value) {
        this.compoundId = value.compoundId;
        this.compoundName = value.compoundName;
        this.compoundDescription = value.compoundDescription;
        this.unitId = value.unitId;
        this.unitName = value.unitName;
        this.unitDescription = value.unitDescription;
        this.unitAbbreviation = value.unitAbbreviation;
        this.synonyms = value.synonyms;
        this.count = value.count;
    }

    public ViewTableCompounds(
        Integer  compoundId,
        String   compoundName,
        String   compoundDescription,
        Integer  unitId,
        String   unitName,
        String   unitDescription,
        String   unitAbbreviation,
        String[] synonyms,
        Long     count
    ) {
        this.compoundId = compoundId;
        this.compoundName = compoundName;
        this.compoundDescription = compoundDescription;
        this.unitId = unitId;
        this.unitName = unitName;
        this.unitDescription = unitDescription;
        this.unitAbbreviation = unitAbbreviation;
        this.synonyms = synonyms;
        this.count = count;
    }

    public Integer getCompoundId() {
        return this.compoundId;
    }

    public void setCompoundId(Integer compoundId) {
        this.compoundId = compoundId;
    }

    public String getCompoundName() {
        return this.compoundName;
    }

    public void setCompoundName(String compoundName) {
        this.compoundName = compoundName;
    }

    public String getCompoundDescription() {
        return this.compoundDescription;
    }

    public void setCompoundDescription(String compoundDescription) {
        this.compoundDescription = compoundDescription;
    }

    public Integer getUnitId() {
        return this.unitId;
    }

    public void setUnitId(Integer unitId) {
        this.unitId = unitId;
    }

    public String getUnitName() {
        return this.unitName;
    }

    public void setUnitName(String unitName) {
        this.unitName = unitName;
    }

    public String getUnitDescription() {
        return this.unitDescription;
    }

    public void setUnitDescription(String unitDescription) {
        this.unitDescription = unitDescription;
    }

    public String getUnitAbbreviation() {
        return this.unitAbbreviation;
    }

    public void setUnitAbbreviation(String unitAbbreviation) {
        this.unitAbbreviation = unitAbbreviation;
    }

    public String[] getSynonyms() {
        return this.synonyms;
    }

    public void setSynonyms(String... synonyms) {
        this.synonyms = synonyms;
    }

    public Long getCount() {
        return this.count;
    }

    public void setCount(Long count) {
        this.count = count;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableCompounds (");

        sb.append(compoundId);
        sb.append(", ").append(compoundName);
        sb.append(", ").append(compoundDescription);
        sb.append(", ").append(unitId);
        sb.append(", ").append(unitName);
        sb.append(", ").append(unitDescription);
        sb.append(", ").append(unitAbbreviation);
        sb.append(", ").append(Arrays.toString(synonyms));
        sb.append(", ").append(count);

        sb.append(")");
        return sb.toString();
    }
// @formatter:on
}
